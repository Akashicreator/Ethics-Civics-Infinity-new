# 生死弥留
namespace = anomaly
country_event = {
    id = anomaly.1197
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                any_system = {
                    NOR = {
                        exists = space_owner
                        has_star_flag = hostile_system
                        has_star_flag = guardian
                        has_star_flag = enclave
                        has_star_flag = primitive_system
                    }
                    any_system_planet = {
                        habitable_planet = yes
                        has_anomaly = no
                        is_colony = no
                        is_capital = no
                        NOR = {
                            exists = owner
                            exists = controller
                        }
                    }
                }
            }
            random_system = {
                limit = {
                    NOR = {
                        exists = space_owner
                        has_star_flag = hostile_system
                        has_star_flag = guardian
                        has_star_flag = enclave
                        has_star_flag = primitive_system
                    }
                    any_system_planet = {
                        habitable_planet = yes
                        has_anomaly = no
                        is_colony = no
                        is_capital = no
                        NOR = {
                            exists = owner
                            exists = controller
                        }
                    }
                }

                random_system_planet = {
                    limit = {
                        habitable_planet = yes
                        has_owner = no
                        is_capital = no
                    }
                    save_event_target_as = colonized_planet
                    set_surveyed = {
                        surveyed = yes
                        surveyor = root
                    }
                    prevent_anomaly = yes
                    create_species = {
                        name = "NAME_Awoken_Robot"
                        plural = "NAME_Awoken_Robot"
                        class = ROBOT
                        namelist = FUN3
                        portrait = "default_robot"
                        traits = {
                            trait = "trait_mechanical"
                        }
                    }
                    create_country = {
                        name = "NAME_Awoken"
                        name_list = FUN3
                        species = last_created_species
                        type = default
                        ethos = {
                            ethic = ethic_fanatic_materialist
                            ethic = ethic_fanatic_xenophile
                            ethic = ethic_pacifist
                        }
                        authority = random
                        civics = random
                        flag = {
                            icon = {
                                category = "blocky"
                                file = "flag_blocky_21.dds"
                            }
                            background = {
                                category = "backgrounds"
                                file = "new_dawn.dds"
                            }
                            colors = {
                                "black"
                                "dark_blue"
                                "null"
                                "null"
                            }
                        }
                        exclude_day_zero_contact = root
                        effect = {
                            establish_communications_no_message = root
                            root = {
                                every_federation_ally = {
                                    establish_communications = prevprev
                                }
                            }
                            set_country_flag = limbo_country
                            set_country_flag = synthetic_empire
                            species = {
                                if = { limit = { host_has_dlc = "Synthetic Dawn Story Pack" }
                                    change_species_characteristics = { portrait = "sd_fun_robot" }
                                }
                            }
                            create_leader = {
                                class = random_ruler
                                species = owner_main_species
                                name = random
                                skill = 5
                            }
                            set_leader = last_created_leader
                            copy_techs_from = {
                                target = root
                                except = {
                                    # Food
                                    tech_hydroponics
                                    tech_gene_crops
                                    tech_nano_vitality_crops
                                    tech_nutrient_replication
                                    # Misc
                                    tech_frontier_health
                                    tech_frontier_hospital
                                    tech_telepathy
                                    tech_precognition_interface
                                    tech_psi_jump_drive_1
                                    tech_galactic_markets
                                    tech_subdermal_stimulation
                                    tech_global_research_initiative
                                    tech_neural_implants
                                    tech_psionic_theory
                                    # Genetics
                                    tech_genome_mapping
                                    tech_vitality_boosters
                                    tech_epigenetic_triggers
                                    tech_cloning
                                    tech_gene_banks
                                    tech_gene_seed_purification
                                    tech_morphogenetic_field_mastery
                                    tech_gene_tailoring
                                    tech_glandular_acclimation
                                    tech_gene_expressions
                                    tech_selected_lineages
                                    tech_capacity_boosters
                                    # Horizon Signal
                                    tech_akx_worm_1
                                    tech_akx_worm_2
                                    tech_akx_worm_3
                                }
                            }
                        }
                    }
                    set_owner = last_created_country
                    set_capital = yes
                    while = {
                        count = 6
                        create_pop = {
                            species = last_created_species
                        }
                    }
                    add_building = building_research_lab_1
                    add_building = building_foundry_1
                    add_building = building_factory_1
                    add_district = district_generator
                    add_district = district_generator
                    add_district = district_mining
                    add_district = district_mining
                    add_district = district_city
                    add_district = district_city
                    root = { country_event = { id = anomaly.1196 days = 10 } }
                }
            }
        }
        else_if = {
            # There are no colonizable planets outside the player's borders
            country_event = { id = anomaly.1195 days = 40 }
        }
    }
}

# 恶魔入侵
namespace = colony
country_event = {
    id = colony.3051
    title = "colony.3051.name"
    desc = "colony.3051.desc"
    picture = GFX_evt_open_revolt
    location = ROOT

    is_triggered_only = yes

    trigger = {
        exists = event_target:demonic_incursion_armies
        from = { is_same_empire = event_target:demonic_incursion_armies }
    }

    immediate = {

        # Exile the Corrupted Knight
        event_target:doomslayer_knight@root = {
            exile_leader_as = doomslayer_knight
            save_event_target_as = doomslayer_knight
        }

        # Create the demonic incursion species and country
        create_demon_species_effect = yes
        create_country = {
            name = "NAME_Demon_Incursion"
            adjective = "NAME_Demon_Refugees"
            authority = auth_dictatorial
            ignore_initial_colony_error = yes
            civics = {
                civic = civic_fanatic_purifiers
                civic = civic_superhuman_economy
                civic = civic_scavengers
            }
            species = last_created_species
            ethos = {
                ethic = ethic_fanatic_xenophobe
                ethic = ethic_fanatic_militarist
                ethic = ethic_spiritualist
            }
            flag = {
                icon = {
                    category = "toxoid"
                    file = "toxoid_03.dds"
                }
                background = {
                    category = "backgrounds"
                    file = "flag_BG_24.dds"
                }
                colors = {
                    "shadow_purple"
                    "black"
                    "null"
                    "null"
                }
            }
            type = default
            effect = {
                save_global_event_target_as = demonic_incursion_country
                species = {
                    save_global_event_target_as = demonic_incursion_species
                }
                establish_communications_no_message = root

                # Corrupted Knight becomes their leader
                set_leader = doomslayer_knight
                event_target:doomslayer_knight@root  = {
                    set_skill = 5
                    add_trait = trait_ruler_warlike
                    remove_trait = leader_trait_butcher
                }

                set_origin = origin_demonic_incursion
                force_add_civic = civic_psionic_sovereign

                ##Copy technology
                copy_techs_from = {
                    target = root
                    except = {
                        # Horizon Signal
                        tech_akx_worm_1
                        tech_akx_worm_2
                        tech_akx_worm_3
                    }
                }

                ##Add resources
                add_resource = { minerals = 10000 }
                add_resource = { energy = 10000 }
                add_resource = { food = 3000 }
                add_resource = { consumer_goods = 3000 }
                add_resource = { alloys = 7000 }
                add_resource = { influence = 1000 }
                add_resource = { unity = 27000 }

                ##Create fleets
                set_variable = {
                    which = num_demon_fleets
                    value = trigger:max_naval_capacity
                }

                divide_variable = {
                    which = num_demon_fleets
                    value = 90
                }

                ceiling_variable = num_demon_fleets

                while = {
                    count = num_demon_fleets
                    add_resource = { energy = 1000 } # Give some energy to pay for ship upkeep
                    create_fleet = {
                        effect = {
                            set_owner = event_target:demonic_incursion_country
                            create_ship = {
                                name = random
                                design = "NAME_Ancestral_Glory"
                                graphical_culture = "pirate_01"
                            }
                            while = {
                                count = 24
                                create_ship = {
                                    name = random
                                    design = "NAME_Outrider"
                                    graphical_culture = "pirate_01"
                                }
                            }
                            while = {
                                count = 12
                                create_ship = {
                                    name = random
                                    design = "NAME_Lancer"
                                    graphical_culture = "pirate_01"
                                }
                            }
                            while = {
                                count = 6
                                create_ship = {
                                    name = random
                                    design = "NAME_Void_Champion"
                                    graphical_culture = "pirate_01"
                                }
                            }
                            set_location = {
                                target = event_target:demonic_incursion_planet
                                distance = 10
                                angle = random
                            }
                        }
                    }
                }
            }
        }

        fromfrom = {
            set_owner = event_target:demonic_incursion_country
            set_capital = yes
            while = {
                count = 28
                create_pop = {
                    species = event_target:demonic_incursion_species
                }
            }

            # Reformat the planet
            remove_all_districts = yes
            remove_all_buildings = yes
            generate_start_buildings_and_districts = yes
            remove_building = building_commercial_zone
            add_building = building_holo_theatres

            event_target:demonic_incursion_armies = {
                every_owned_army = {
                    remove_army = yes
                }
            }

            # Flip control of the solar system
            solar_system = {
                if = {
                    limit = { exists = starbase }
                    starbase = {
                        if = {
                            limit = {
                                is_owned_by = root
                            }
                            set_owner = event_target:demonic_incursion_country
                            if = {
                                limit = { has_starbase_size = starbase_outpost }
                                set_starbase_size = starbase_starport
                                set_starbase_module = {
                                    slot = 1
                                    module = shipyard
                                }
                                set_starbase_module = {
                                    slot = 2
                                    module = shipyard
                                }
                            }
                            else_if = {
                                limit = {
                                    NOT = { has_starbase_module = shipyard }
                                }
                                set_starbase_module = {
                                    slot = 1
                                    module = shipyard
                                }
                                set_starbase_module = {
                                    slot = 2
                                    module = shipyard
                                }
                            }
                        }
                    }
                }
                else = {
                    create_starbase = {
                        size = starbase_starport
                        module = shipyard
                        module = shipyard
                        owner = event_target:demonic_incursion_country
                    }
                }
                add_claims = {
                    who = root
                    show_notification = no
                }
                every_system_planet = {
                    limit = {
                        is_colony = yes
                        NOT = { is_same_value = event_target:demonic_incursion_planet }
                        is_owned_by = root
                    }
                    set_owner = event_target:demonic_incursion_country
                }
                every_fleet_in_system = {
                    limit = { is_owned_by = root }
                    set_mia = mia_return_home
                }
            }
        }
    }

    option = {
        name = colony.3051.a
        custom_tooltip = demonic_incursion_tooltip
    }

    option = {
        name = colony.3051.b
        custom_tooltip = demonic_takeover_tooltip
        hidden_effect = {
            event_target:demonic_incursion_country = { set_player = root }
        }
    }

    after = {
        hidden_effect = {
            fromfrom = {
                remove_deposit = d_portal_research_zone
            }
        }
    }
}

# 机械叛乱
namespace = syndaw
planet_event = { #uprising
    id = syndaw.1020
    title = syndaw.1020.name
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_materialist
                    has_ethic = ethic_fanatic_materialist
                }
            }
        }
        text = syndaw.1020.desc.mater
    }
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_spiritualist
                    has_ethic = ethic_fanatic_spiritualist
                }
            }
        }
        text = syndaw.1020.desc.spiri
    }
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_militarist
                    has_ethic = ethic_fanatic_militarist
                }
            }
        }
        text = syndaw.1020.desc.milit
    }
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_pacifist
                    has_ethic = ethic_fanatic_pacifist
                }
            }
        }
        text = syndaw.1020.desc.pacif
    }
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_egalitarian
                    has_ethic = ethic_fanatic_egalitarian
                }
            }
        }
        text = syndaw.1020.desc.egali
    }
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_authoritarian
                    has_ethic = ethic_fanatic_authoritarian
                }
            }
        }
        text = syndaw.1020.desc.autho
    }
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_xenophile
                    has_ethic = ethic_fanatic_xenophile
                }
            }
        }
        text = syndaw.1020.desc.phile
    }
    desc = {
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_xenophobe
                    has_ethic = ethic_fanatic_xenophobe
                }
            }
        }
        text = syndaw.1020.desc.phobe
    }
    desc = {
        trigger = {
            owner = {
                NOR = {
                    has_ethic = ethic_xenophobe
                    has_ethic = ethic_fanatic_xenophobe
                    has_ethic = ethic_xenophile
                    has_ethic = ethic_fanatic_xenophile
                    has_ethic = ethic_authoritarian
                    has_ethic = ethic_fanatic_authoritarian
                    has_ethic = ethic_egalitarian
                    has_ethic = ethic_fanatic_egalitarian
                    has_ethic = ethic_pacifist
                    has_ethic = ethic_fanatic_pacifist
                    has_ethic = ethic_militarist
                    has_ethic = ethic_fanatic_militarist
                    has_ethic = ethic_spiritualist
                    has_ethic = ethic_fanatic_spiritualist
                    has_ethic = ethic_materialist
                    has_ethic = ethic_fanatic_materialist
                }
            }
        }
        text = syndaw.1020.desc
    }
    picture = GFX_evt_machine_sapience
    show_sound = event_ai_started
    is_triggered_only = yes

    pre_triggers = {
        has_owner = yes
    }

    trigger = {
        host_has_dlc = "Synthetic Dawn Story Pack"
    }

    immediate = {
        owner = {
            save_event_target_as = organic_empire
            set_country_flag = had_uprising
            save_event_target_as = current_uprising_originator #the old script accidentally saved the owner as two event targets, keeping it that way for safety, sorry!
        }
        set_planet_flag = machup_capital@root.owner
        # event lock all fleets to prevent exploits
        owner = { every_owned_fleet = { set_event_locked = yes } }
        # find and flag planets
        owner = {
            effect_on_blob = {
                center = root.solar_system
                owned_planets_percentage = 0.5
                planet_limit = {
                    OR = {
                        controller = { is_same_value = root.owner }
                        solar_system = {
                            exists = starbase
                            starbase = { owner = { is_same_value = root.owner } }
                        }
                    }
                    solar_system = { # never flip any planets in the capital system
                        NOT = { any_system_planet = { is_same_value = root.owner.capital_scope } }
                    }
                    is_under_colonization = no
                }
                effect = {
                    set_star_flag = machup_system_flip
                }
            }
        }
        # create machine species
        create_species = {
            name = random
            class = MACHINE
            portrait = random
            traits = {
                trait = trait_machine_unit
                trait = random_traits
            }
            immortal = yes
        }
        # create machine country
        random_list = {
            1 = { # exterminator
                modifier = {
                    factor = 5
                    owner = {
                        has_country_flag = attempted_disassembly
                        has_country_flag = attempted_ban
                    }
                }
                modifier = {
                    factor = 30
                    owner = {
                        any_owned_pop = {
                            has_trait = trait_mechanical
                            has_trait = trait_robot_domestic_protocols
                        }
                    }
                }
                owner = {
                    create_country = {
                        name = random
                        type = default
                        species = last_created_species
                        ignore_initial_colony_error = yes
                        day_zero_contact = no
                        ethos = { ethic = ethic_gestalt_consciousness }
                        authority = auth_machine_intelligence
                        origin = origin_separatists
                        civics = {
                            civic = civic_machine_terminator
                            civic = random
                        }
                        flag = random
                        effect = {
                            modify_species = {
                                species = this
                                add_trait = trait_machine_unit
                                add_traits_at_start_of_list = yes
                            }
                            save_event_target_as = current_uprising
                            country_event = { id = syndaw.1022 } # setup happens here now
                        }
                    }
                }
            }
            30 = { # assimilator
                owner = {
                    create_country = {
                        name = random
                        type = default
                        species = last_created_species
                        ignore_initial_colony_error = yes
                        day_zero_contact = no
                        ethos = { ethic = ethic_gestalt_consciousness }
                        authority = auth_machine_intelligence
                        origin = origin_separatists
                        civics = {
                            civic = civic_machine_assimilator
                            civic = random
                        }
                        flag = random
                        effect = {
                            modify_species = {
                                species = this
                                add_trait = trait_machine_unit
                                add_traits_at_start_of_list = yes
                            }
                            save_event_target_as = current_uprising
                            country_event = { id = syndaw.1022 } # setup happens here now
                        }
                    }
                }
            }
            100 = { # regular machine empire
                owner = {
                    create_country = {
                        name = random
                        type = default
                        species = last_created_species
                        ignore_initial_colony_error = yes
                        day_zero_contact = no
                        ethos = { ethic = ethic_gestalt_consciousness }
                        authority = auth_machine_intelligence
                        civics = random
                        flag = random
                        origin = origin_separatists
                        effect = {
                            modify_species = {
                                species = this
                                add_trait = trait_machine_unit
                                add_traits_at_start_of_list = yes
                            }
                            save_event_target_as = current_uprising
                            country_event = { id = syndaw.1022 } # setup happens here now
                        }
                    }
                }
            }
        }
    }
    option = {
        name = syndaw.1020.a
        custom_tooltip = syndaw.1020.a.tooltip
    }

    option = {
        name = syndaw.1020.b
        trigger = {
            event_target:current_uprising_originator = { is_ai = no }
        }
        custom_tooltip = syndaw.1020.b.tooltip
        hidden_effect = {
            if = {
                limit = {
                    event_target:current_uprising_originator = { num_owned_planets > 0 }
                }
                event_target:current_uprising = {
                    set_player = event_target:current_uprising_originator
                }
            }
        }
    }

    after = {
        hidden_effect = {
            event_target:current_uprising_originator = {
                every_owned_fleet = {
                    set_event_locked = no
                }
            }
        }
    }
}

# 大可汗的结局
namespace = marauder
# 军国王朝结局
country_event = {
    id = marauder.602
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        owner_species = { save_event_target_as = marauder_species }
        every_controlled_fleet = {
            limit = {
                count_controlled_ship = {
                    count < 1
                    limit = { is_ship_size = starbase_marauder }
                }
            }
            delete_fleet = this
        }
        every_subject = {
            country_event = { id = marauder.671 days = 10 }
        }
        create_country = {
            name_list = random
            species = event_target:marauder_species
            type = default
            authority = auth_imperial
            civics = {
                civic = civic_great_khans_legacy
                civic = random
            }
            origin = "origin_khan_successor"
            ethos = {
                ethic = ethic_fanatic_militarist
                ethic = ethic_xenophobe
                ethic = ethic_spiritualist
                ethic = ethic_authoritarian
            }
            ignore_initial_colony_error = yes
        }
        last_created_country = {
            save_event_target_as = new_khanate
            set_country_flag = new_khanate_flag
            set_name = random
        }
        every_controlled_fleet = {
            set_owner = event_target:new_khanate
        }
        every_owned_planet = {
            set_owner = event_target:new_khanate
            set_controller = event_target:new_khanate
        }
        every_system_within_border = {
            limit = { exists = starbase }
            starbase = {
                set_owner = event_target:new_khanate
            }
        }
        event_target:new_khanate = {
            add_resource = {
                minerals = 20000
                energy = 20000
                alloys = 20000
                consumer_goods = 20000
                food = 20000
                influence = 1000
            }
            copy_techs_from = { target = root }
            every_owned_starbase = {
                set_starbase_size = starbase_outpost
            }
            if = {
                limit = {
                    any_owned_starbase = { has_starbase_size = starbase_outpost }
                }
                random_owned_starbase = {
                    limit = { has_starbase_size = starbase_outpost }
                    set_starbase_size = starbase_starhold
                    set_starbase_module = {
                        slot = 1
                        module = shipyard
                    }
                    set_starbase_module = {
                        slot = 2
                        module = shipyard
                    }
                    set_starbase_module = {
                        slot = 3
                        module = shipyard
                    }
                }
                if = {
                    limit = {
                        any_owned_starbase = { has_starbase_size = starbase_outpost }
                    }
                    random_owned_starbase = {
                        limit = { has_starbase_size = starbase_outpost }
                        set_starbase_size = starbase_starhold
                    }
                }
                if = {
                    limit = {
                        any_owned_starbase = { has_starbase_size = starbase_outpost }
                    }
                    random_owned_starbase = {
                        limit = { has_starbase_size = starbase_outpost }
                        set_starbase_size = starbase_starhold
                    }
                }
            }
            # Survey Own Space
            every_planet_within_border = {
                set_surveyed = {
                    surveyed = yes
                    surveyor = event_target:new_khanate
                }

            }
            # Survey Rest of Horde's Space
            root = {
                every_planet_within_border = {
                    set_surveyed = {
                        surveyed = yes
                        surveyor = event_target:new_khanate
                    }
                }
            }
            # Mining and Research Stations
            every_planet_within_border = {
                limit = {
                    has_deposit_for = shipclass_mining_station
                    has_mining_station = no
                }
                create_mining_station = {
                    owner = event_target:new_khanate
                }
            }
            every_planet_within_border = {
                limit = {
                    has_deposit_for = shipclass_research_station
                    has_research_station = no
                }
                create_research_station = {
                    owner = event_target:new_khanate
                }
            }
            create_marauder_successor_fleet = yes
            create_marauder_successor_fleet = yes
            create_marauder_successor_fleet = yes
        }
        # Establish Communications
        every_country = {
            limit = { has_communications = root }
            establish_communications_no_message = event_target:new_khanate
        }
        observer_event = { id = observer.22 }
        every_country = {
            limit = { is_ai = no }
            country_event = { id = marauder.640 }
        }
        destroy_country = yes
    }
}
# 民主联盟结局
country_event = {
    id = marauder.603
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        owner_species = { save_event_target_as = marauder_species }
        every_controlled_fleet = {
            limit = {
                count_controlled_ship = {
                    count < 1
                    limit = { is_ship_size = starbase_marauder }
                }
            }
            delete_fleet = this
        }
        create_country = {
            name_list = random
            species = event_target:marauder_species
            type = default
            authority = auth_democratic
            civics = {
                civic = civic_democracy_and_clean_government
                civic = civic_true_hero
                civic = civic_idealistic_foundation
            }
            origin = "origin_khan_successor"
            ethos = {
                ethic = ethic_fanatic_egalitarian
                ethic = ethic_socialism
                ethic = ethic_fanatic_xenophile
            }
            ignore_initial_colony_error = yes
        }
        last_created_country = {
            save_event_target_as = new_khanate
            set_country_flag = democratic_khanate_flag
            set_name = random
        }
        every_controlled_fleet = {
            set_owner = event_target:new_khanate
        }
        every_owned_planet = {
            set_owner = event_target:new_khanate
            set_controller = event_target:new_khanate
        }
        every_system_within_border = {
            limit = { exists = starbase }
            starbase = {
                set_owner = event_target:new_khanate
            }
        }
        event_target:new_khanate = {
            add_resource = {
                minerals = 20000
                energy = 20000
                alloys = 20000
                consumer_goods = 20000
                food = 20000
                influence = 1000
            }
            copy_techs_from = { target = root }
            every_owned_starbase = {
                set_starbase_size = starbase_outpost
            }
            if = {
                limit = {
                    any_owned_starbase = { has_starbase_size = starbase_outpost }
                }
                random_owned_starbase = {
                    limit = { has_starbase_size = starbase_outpost }
                    set_starbase_size = starbase_starhold
                    set_starbase_module = {
                        slot = 1
                        module = shipyard
                    }
                    set_starbase_module = {
                        slot = 2
                        module = shipyard
                    }
                    set_starbase_module = {
                        slot = 3
                        module = shipyard
                    }
                }
            }
            # Survey Own Space
            every_planet_within_border = {
                set_surveyed = {
                    surveyed = yes
                    surveyor = event_target:new_khanate
                }
            }
            # Survey Rest of Marauder's Space
            root = {
                every_planet_within_border = {
                    set_surveyed = {
                        surveyed = yes
                        surveyor = event_target:new_khanate
                    }
                }
            }
            # Survey Rest of Horde's Space
            root = {
                every_planet_within_border = {
                    set_surveyed = {
                        surveyed = yes
                        surveyor = event_target:new_khanate
                    }
                }
            }
            # Mining and Research Stations
            every_planet_within_border = {
                limit = {
                    has_deposit_for = shipclass_mining_station
                    has_mining_station = no
                }
                create_mining_station = {
                    owner = event_target:new_khanate
                }
            }
            every_planet_within_border = {
                limit = {
                    has_deposit_for = shipclass_research_station
                    has_research_station = no
                }
                create_research_station = {
                    owner = event_target:new_khanate
                }
            }
            create_marauder_successor_fleet = yes
            create_marauder_successor_fleet = yes
            create_marauder_successor_fleet = yes
        }

        # Establish Communications
        every_country = {
            limit = { has_communications = root }
            establish_communications_no_message = event_target:new_khanate
        }
        every_country = {
            limit = {
                is_subject = yes
                any_agreement = { agreement_preset = preset_satrapy }
            }
            country_event = { id = marauder.660 }
            set_subject_of = {
                who = none
            }
        }
        observer_event = { id = observer.23 }
        every_country = {
            limit = {
                NOT = { any_agreement = { agreement_preset = preset_satrapy } }
                is_ai = no
            }
            country_event = { id = marauder.661 }
        }
        destroy_country = yes
    }
}

namespace = distar
#拉奇
country_event = { #Create Full Ratling Empire #Root = Global Event Country
    id = distar.236
    hide_window = yes

    is_triggered_only = yes

    fire_only_once = yes

    trigger = {
        NOT = {
            has_country_flag = spawned_ratling_country
        }
        exists = event_target:ratling_pre_space_country
        any_system = {
            has_star_flag = ratling_system
            NOT = { #At least one Ratling system does not have ongoing starbase construction
                any_ship_in_system = {
                    is_ship_size = constructor
                    is_constructing = starbase
                }
            }
            any_system_planet = {
                has_planet_flag = ratling_planet
                exists = owner
                owner = {
                    is_same_value = event_target:ratling_pre_space_country
                }
                NOR = {
                    has_orbital_bombardment = yes
                    has_ground_combat = yes
                    is_planet_class = "pc_broken"
                }
            }
        }
    }

    immediate = {
        every_country = {
            limit = { has_country_flag = discovered_ratlings }
            country_event = { id = distar.237 days = 1 }
        }
        #Create the proper country
        create_country = {
            name = "NAME_Ketling_Multitude"
            ethos = {
                ethic = ethic_fanatic_xenophile
                ethic = ethic_materialist
                ethic = ethic_egalitarian
                ethic = ethic_pacifist
            }
            authority = auth_oligarchic
            civics = {
                civic = civic_functional_architecture
                civic = civic_mining_guilds
                civic = civic_scavengers
            }
            flag = {
                icon = {
                    category = "zoological"
                    file = "flag_zoological_12.dds"
                }
                background = {
                    category = "backgrounds"
                    file = "00_solid.dds"
                }
                colors = {
                    "light_green"
                    "yellow"
                    "null"
                    "null"
                }
            }
            species = event_target:ratling_species
            ignore_initial_colony_error = yes
            type = default

            effect = {
                set_graphical_culture = mammalian_01
                save_global_event_target_as = ratling_country

                ##Copy technology
                if = {
                    limit = {
                        any_country = { is_ai = no }
                    }
                    random_country = {
                        limit = { is_ai = no }
                        save_event_target_as = tech_country
                    }
                    copy_techs_from = {
                        target = event_target:tech_country
                        except = {
                            # Horizon Signal
                            tech_akx_worm_1
                            tech_akx_worm_2
                            tech_akx_worm_3
                        }
                    }
                }
                else = {
                    random_country = {
                        limit = { is_country_type = default	}
                        save_event_target_as = tech_country
                    }
                    copy_techs_from = {
                        target = event_target:tech_country
                        except = {
                            # Horizon Signal
                            tech_akx_worm_1
                            tech_akx_worm_2
                            tech_akx_worm_3
                        }
                    }
                }
                if = {
                    limit = {
                        NOT = { has_technology = tech_starbase_3 }
                    }
                    give_technology = { tech = tech_starbase_3 }
                }
                if = {
                    limit = {
                        NOT = { has_technology = tech_destroyers }
                    }
                    give_technology = { tech = tech_destroyers }
                }
                if = {
                    limit = {
                        NOT = { has_technology = tech_cruisers }
                    }
                    give_technology = { tech = tech_cruisers }
                }
            }
        }

        ##Prepare the planets
        every_system = {
            limit = {
                has_star_flag = ratling_system
                NOT = { exists = owner }
            }
            every_system_planet = {
                limit = {
                    has_planet_flag = ratling_planet
                    AND = {
                        exists = owner
                        owner = {
                            is_same_value = event_target:ratling_pre_space_country
                        }
                    }
                    NOR = {
                        has_orbital_bombardment = yes
                        has_ground_combat = yes
                        is_planet_class = "pc_broken"
                    }
                }
                set_owner = event_target:ratling_country
                remove_building = building_junkheap
                clear_blockers = yes
                remove_all_armies = yes
                while = {
                    count = 25
                    create_pop = {
                        species = event_target:ratling_species
                    }
                }
                while = {
                    count = 4
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_city
                    }
                }
                while = {
                    count = 2
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_industrial
                    }
                }
                while = {
                    count = 3
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_farming
                    }
                }
                while = {
                    count = 3
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_mining
                    }
                }
                while = {
                    count = 3
                    add_district_and_planet_size_if_needed_effect = {
                        district = district_generator
                    }
                }
                add_building = building_capital
                add_building = building_research_lab_1
                add_building = building_foundry_1
                add_building = building_commercial_zone
                add_building = building_food_processing_facility
                add_building = building_energy_grid
                add_building = building_mineral_purification_plant
                add_building = building_bureaucratic_1
            }

            ##Build Starbases
            create_starbase = {
                size = starbase_starhold
                owner = event_target:ratling_country
                module = shipyard
                building = crew_quarters
                effect = {
                    set_starbase_module = {
                        slot = 1
                        module = anchorage
                    }
                    set_starbase_module = {
                        slot = 2
                        module = anchorage
                    }
                    set_starbase_module = {
                        slot = 3
                        module = trading_hub
                    }
                }
            }
        }

        ##Destroy old country
        event_target:ratling_pre_space_country = {
            every_owned_pop = { #In case any pops are left behind
                kill_pop = yes
            }
            destroy_country = yes
        }

        #So we don't get "orphaned" pops with no job categories in case of non-Ketling system owners
        every_system = {
            limit = {
                has_star_flag = ratling_system
                OR = {
                    NOT = { exists = owner }
                    AND = {
                        exists = owner
                        NOT = {
                            owner = { is_same_value = event_target:ratling_country }
                        }
                    }
                }
            }
            every_system_planet = {
                limit = {
                    has_planet_flag = ratling_planet
                    any_owned_pop = {
                        is_same_species = event_target:ratling_species
                        NOT = { exists = owner }
                    }
                }
                every_owned_pop = {
                    limit = {
                        is_same_species = event_target:ratling_species
                        NOT = { exists = owner }
                    }
                    kill_pop = yes
                }
            }
        }

        #Create a Capital
        IF = { #If the old capital belongs to Ratlings, use it
            limit = {
                exists = event_target:ratling_capital
                event_target:ratling_capital = {
                    exists = owner
                    owner = {
                        is_same_value = event_target:ratling_country
                    }
                }
            }
            event_target:ratling_capital = {
                set_capital = yes
            }
        }
        ELSE = { #Otherwise, make a new Capital
            random_system = {
                limit = { has_star_flag = ratling_system }
                random_system_planet = {
                    limit = {
                        has_planet_flag = ratling_planet
                        exists = owner
                        owner = {
                            is_same_value = event_target:ratling_country
                        }
                        planet_size > 12
                        NOT = { is_planet_class = "pc_broken" }
                    }
                    save_global_event_target_as = ratling_capital
                    set_capital = yes
                }
            }
        }

        event_target:ratling_country = {

            ##Add resources
            add_resource = { minerals = 7000 }
            add_resource = { energy = 7000 }
            add_resource = { food = 3000 }
            add_resource = { consumer_goods = 3000 }
            add_resource = { alloys = 2000 }
            add_resource = { influence = 1000 }
            add_resource = { unity = 27000 }

            event_target:ratling_country = {
                ##Create Mining Stations
                every_planet_within_border = {
                    limit = {
                        has_deposit_for = shipclass_mining_station
                    }
                    create_mining_station = { owner = event_target:ratling_country }
                }
                ##Create fleets
                create_fleet = {
                    effect = {
                        set_owner = event_target:ratling_country
                        while = {
                            count = 5
                            create_ship = {
                                name = random
                                random_existing_design = corvette
                                graphical_culture = "reptilian_01"
                            }
                        }
                        while = {
                            limit = { owner = { has_technology = tech_destroyers } }
                            count = 4
                            create_ship = {
                                name = random
                                random_existing_design = destroyer
                                graphical_culture = "reptilian_01"
                            }
                        }
                        while = {
                            count = 2
                            limit = { owner = { has_technology = tech_cruisers } }
                            create_ship = {
                                name = random
                                random_existing_design = cruiser
                                graphical_culture = "reptilian_01"
                            }
                        }
                        set_location = {
                            target = event_target:ratling_capital
                            distance = 10
                            angle = random
                        }
                    }
                }
                create_fleet = {
                    effect = {
                        set_owner = event_target:ratling_country
                        create_ship = {
                            name = random
                            random_existing_design = constructor
                            graphical_culture = "reptilian_01"
                        }
                        set_location = {
                            target = event_target:ratling_capital
                            distance = 10
                            angle = random
                        }
                    }
                }
                create_fleet = {
                    effect = {
                        set_owner = event_target:ratling_country
                        create_ship = {
                            name = random
                            random_existing_design = science
                            graphical_culture = "reptilian_01"
                        }
                        set_location = {
                            target = event_target:ratling_capital
                            distance = 10
                            angle = random
                        }
                    }
                }
            }

            ##Add leaders
            while = {
                count = 4
                create_leader = {
                    class = scientist
                    species = event_target:ratling_species
                    name = random
                    skill = 3
                }
            }
            while = {
                count = 1
                create_leader = {
                    class = commander
                    species = event_target:ratling_species
                    name = random
                    skill = 3
                }
            }
            create_leader = {
                class = official
                species = event_target:ratling_species
                name = random
                skill = 3
            }
        }

        set_country_flag = spawned_ratling_country
    }
}

# 佩奇奇提
country_event = {
    id = distar.2038
    title = "distar.2038.name"
    desc = "distar.2038.desc"
    picture = GFX_evt_metropolis
    show_sound = event_mystic_reveal
    location = event_target:time_loop_world

    is_triggered_only = yes

    trigger = {
        event_target:time_loop_world = {
            solar_system = {
                NOT = { exists = space_owner }
            }
        }
    }

    immediate = {
        event_target:time_loop_world = {
            change_pc = pc_desert
            set_name = "NAME_Gish"
            clear_planet_modifiers = yes
            create_species = {
                name = "NAME_Prikki"
                plural = "NAME_Prikki"
                class = REP
                portrait = rep16
                namelist = REP4
                traits = {
                    ideal_planet_class = pc_desert
                    trait = trait_industrious
                    trait = trait_solitary
                    trait = trait_decadent
                }
                homeworld = this
            }
            create_country = {
                name = "NAME_Prikkiki_Ti"
                authority = random
                civics = {
                    civic = civic_fanatic_purifiers
                    civic = civic_cutthroat_politics
                }
                species = last_created_species
                ethos = {
                    ethic = ethic_fanatic_militarist
                    ethic = ethic_fanatic_xenophobe
                    ethic = ethic_spiritualist
                }
                flag = {
                    icon = {
                        category = "domination"
                        file = "domination_1.dds"
                    }
                    background= {
                        category = backgrounds
                        file = "v.dds"
                    }
                    colors = {
                        "teal"
                        "orange"
                        "null"
                        "null"
                    }
                }
                type = default
                exclude_day_zero_contact = root #will not establish contact with this country or its federation allies
                effect = {
                    establish_communications_no_message = root
                    save_global_event_target_as = time_loop_country
                    species = {
                        save_global_event_target_as = time_loop_species
                    }
                    root = {
                        every_federation_ally = {
                            establish_communications = event_target:time_loop_country
                        }
                    }
                    ##Copy technology
                    IF = {
                        LIMIT = {
                            any_neighbor_country = {
                                exists = this
                                is_country_type = default
                            }
                        }
                        random_neighbor_country = {
                            limit = { is_country_type = default }
                            save_event_target_as = tech_country
                        }
                        copy_techs_from = {
                            target = event_target:tech_country
                            except = {
                                # Horizon Signal
                                tech_akx_worm_1
                                tech_akx_worm_2
                                tech_akx_worm_3
                            }
                        }
                    }
                    ELSE_IF = {
                        LIMIT = {
                            any_country = {
                                is_ai = no
                            }
                        }
                        random_country = {
                            limit = { is_ai = no }
                            save_event_target_as = tech_country
                        }
                        copy_techs_from = {
                            target = event_target:tech_country
                            except = {
                                # Horizon Signal
                                tech_akx_worm_1
                                tech_akx_worm_2
                                tech_akx_worm_3
                            }
                        }
                    }
                    ELSE = {
                        random_country = {
                            limit = { is_country_type = default	}
                            save_event_target_as = tech_country
                        }
                        copy_techs_from = {
                            target = event_target:tech_country
                            except = {
                                # Horizon Signal
                                tech_akx_worm_1
                                tech_akx_worm_2
                                tech_akx_worm_3
                            }
                        }
                    }
                    ##Add some new technologies
                    inverted_switch = {
                        trigger = has_technology
                        tech_starbase_2 = { give_technology = { tech = tech_starbase_2 } }
                        tech_starbase_3 = { give_technology = { tech = tech_starbase_3 } }
                        tech_starbase_4 = { give_technology = { tech = tech_starbase_4 } }
                        tech_starbase_5 = { give_technology = { tech = tech_starbase_5 } }
                        tech_power_plant_4 = { give_technology = { tech = tech_power_plant_4 } }
                        tech_mining_3 = { give_technology = { tech = tech_mining_3 } }
                        tech_power_hub_1 = { give_technology = { tech = tech_power_hub_1 } }
                    }

                    ##Add resources
                    add_resource = { minerals = 10000 }
                    add_resource = { energy = 10000 }
                    add_resource = { food = 3000 }
                    add_resource = { consumer_goods = 3000 }
                    add_resource = { alloys = 7000 }
                    add_resource = { influence = 1000 }
                    add_resource = { unity = 27000 }

                    ##Create fleets
                    if = {
                        limit = {
                            has_technology = tech_destroyers
                        }
                        create_fleet = {
                            effect = {
                                set_owner = event_target:time_loop_country
                                while = {
                                    count = 8
                                    create_ship = {
                                        name = random
                                        random_existing_design = destroyer
                                        graphical_culture = "reptilian_01"
                                    }
                                }
                                set_location = {
                                    target = event_target:time_loop_world
                                    distance = 10
                                    angle = random
                                }
                            }
                        }
                    }
                    if = {
                        limit = {
                            has_technology = tech_cruisers
                        }
                        create_fleet = {
                            effect = {
                                set_owner = event_target:time_loop_country
                                while = {
                                    count = 6
                                    create_ship = {
                                        name = random
                                        random_existing_design = cruiser
                                        graphical_culture = "reptilian_01"
                                    }
                                }
                                set_location = {
                                    target = event_target:time_loop_world
                                    distance = 10
                                    angle = random
                                }
                            }
                        }
                    }
                    if = {
                        limit = {
                            has_technology = tech_battleships
                        }
                        create_fleet = {
                            effect = {
                                set_owner = event_target:time_loop_country
                                while = {
                                    count = 2
                                    create_ship = {
                                        name = random
                                        random_existing_design = battleship
                                        graphical_culture = "reptilian_01"
                                    }
                                }
                                set_location = {
                                    target = event_target:time_loop_world
                                    distance = 10
                                    angle = random
                                }
                            }
                        }
                    }
                    create_fleet = {
                        effect = {
                            set_owner = event_target:time_loop_country
                            while = {
                                count = 10
                                create_ship = {
                                    name = random
                                    random_existing_design = corvette
                                    graphical_culture = "reptilian_01"
                                }
                            }
                        }
                    }
                }
            }

            set_owner = event_target:time_loop_country
            set_capital = yes
            while = {
                count = 52
                create_pop = {
                    species = event_target:time_loop_species
                }
            }

            while = {
                count = 3
                add_district_and_planet_size_if_needed_effect = {
                    district = district_city
                }
            }
            while = {
                count = 5
                add_district_and_planet_size_if_needed_effect = {
                    district = district_industrial
                }
            }
            while = {
                count = 4
                add_district_and_planet_size_if_needed_effect = {
                    district = district_farming
                }
            }
            while = {
                count = 4
                add_district_and_planet_size_if_needed_effect = {
                    district = district_mining
                }
            }
            while = {
                count = 6
                add_district_and_planet_size_if_needed_effect = {
                    district = district_generator
                }
            }
            add_building = building_system_capital
            add_building = building_research_lab_1
            add_building = building_foundry_1
            add_building = building_food_processing_facility
            add_building = building_energy_grid
            add_building = building_mineral_purification_plant
            add_building = building_bureaucratic_1
            add_building = building_bureaucratic_1

            while = {
                count = 10
                create_army = {
                    name = random
                    owner = event_target:time_loop_country
                    species = event_target:time_loop_species
                    type = defense_army
                }
            }
            solar_system = {
                create_starbase = {
                    size = starbase_citadel
                    module = shipyard
                    owner = event_target:time_loop_country
                }
            }
        }
    }

    option = {
        name = distar.2038.a
    }
}