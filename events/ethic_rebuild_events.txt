
namespace = immortal_ruler

country_event = {
	id = immortal_ruler.1
	title = "immortal_ruler.1.name"
	picture = GFX_evt_alien_propaganda
	show_sound = event_celebration
	desc = "immortal_ruler.1.desc"
	is_triggered_only = yes

	trigger = {
		is_ai = no
	}

	immediate = {
		FROMFROM = {
			leader = { save_event_target_as = ruler }
			solar_system = { save_event_target_as = system }
			leader = { add_trait = trait_ruler_immortal }
		}
		
		set_country_flag = flag_immortal_ruler
	}

	option = {
		name = "observation.0002.a"
	}

}




namespace = unity_patrons

country_event = {
	id = unity_patrons.1
	hide_window = yes
	is_triggered_only = yes
	location = ROOT 
	
	trigger = {
		has_valid_civic = civic_peacekeepers
	}	

	immediate = { 
	
		add_modifier = {
			modifier = "unity_patrons"
			days = 3650
		}
	
	}
	
}


namespace = glorious_fleet

# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2

country_event = {
	id = glorious_fleet.0
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_naval_traditions
		not = { has_country_flag = glorious_fleet }
		not = { has_country_flag = unglorious_fleet }
	}	

	immediate = { 	
		add_modifier = {
			modifier = "glorious_fleet"
			days = 30
		}
		set_timed_country_flag = {
			flag = glorious_fleet
			days = 30 
		}		
	}
	
}


# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2

country_event = {
	id = glorious_fleet.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_naval_traditions
		not = { has_country_flag = glorious_fleet }
		not = { has_country_flag = unglorious_fleet }
	}	

	immediate = { 	
		add_modifier = {
			modifier = "unglorious_fleet"
			days = 30
		}
		set_timed_country_flag = {
			flag = unglorious_fleet
			days = 30 
		}		
	}
	
}



namespace = voice_planet

planet_event = {
	id = voice_planet.1	
	hide_window = yes
	is_triggered_only = yes
	location = ROOT 

	immediate = {
			
			if = {
				limit = {
					has_modifier = "dangerous_wildlife"
				}
				remove_modifier = "dangerous_wildlife"
			}				
					
			if = {
				limit = {
					has_modifier = "bleak_planet"
				}
				remove_modifier = "bleak_planet"
			}	
			
			if = {
				limit = {
					has_modifier = "hazardous_weather"
				}
				remove_modifier = "hazardous_weather"
			}	

			if = {
				limit = {
					has_modifier = "wild_storms"
				}
				remove_modifier = "wild_storms"
			}			
	
	}
	
}



planet_event = {
	id = voice_planet.2	
	hide_window = yes
	is_triggered_only = yes
	location = ROOT 

	immediate = {		
					
	


			if = {
				limit = {
					has_modifier = "unstable_tectonics"
				}
				remove_modifier = "unstable_tectonics"
			}

			if = {
				limit = {
					has_modifier = "weak_magnetic_field"
				}
				remove_modifier = "weak_magnetic_field"
			}

			if = {
				limit = {
					has_modifier = "tidal_locked"
				}
				remove_modifier = "tidal_locked"
			}



			if = {
				limit = {
					has_modifier = "irradiated_planet"
				}
				remove_modifier = "irradiated_planet"
			}
			


			if = {
				limit = {
					has_modifier = "damaged_ecology"
				}
				remove_modifier = "damaged_ecology"
			}			

			if = {
				limit = {
					has_modifier = "wasteland_radiation"
				}
				remove_modifier = "wasteland_radiation"
			}
			
				
			if = {
				limit = {
					has_modifier = "abandoned_terraforming"
				}
				remove_modifier = "abandoned_terraforming"
			}	

		
	
	}
	
}



namespace = ethic_rebuild_swarm

planet_event = {
	id = ethic_rebuild_swarm.1
	title = "ethic_rebuild_swarm.1.name"
	desc = "ethic_rebuild_swarm.1.desc"
	picture = GFX_evt_circuitry_modification
	is_triggered_only = yes

	trigger = {
		from = {
			is_hive_empire = yes
		}
		fromfrom = {
			is_robotic_species = no
			from = {
				owner_main_species = {
					NOT = { is_same_species = prevprev }
				}
			}
		}
		fromfrom.species = {
			NOT = { has_species_flag = eaten_by@root.owner }
		}
		NOT = {
			any_galaxy_species = {
				has_species_flag = eaten_by@root.owner
				is_same_species = fromfrom.species
			}
		}
	}

	immediate = {
		fromfrom.species = {
			set_species_flag = eaten_by@root.owner
		}
		from = {
			change_variable = {
				which = species_eaten
				value = 1
			}
			remove_modifier = swarm_species_eaten
			add_modifier = {
				modifier = swarm_species_eaten
				multiplier = species_eaten
			}
		}
	}

	option = {
		name = "ethic_rebuild_swarm.1.a"
	}
}

namespace = ethic_thirteen_monkeys

event = {
	id = ethic_thirteen_monkeys.0
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { has_origin = origin_thirteen_monkeys }
			if = {
				limit = {
					NOT = { has_modifier = time_syndrome_country }
				}
				add_modifier = { modifier = time_syndrome_country years = 10 }
				while = {
					count = 10
					add_random_research_option = {
						add_progress = 0.6
						ignore_prereqs = yes
						area = engineering
						tier = 1
						fail_effects = {
							add_random_research_option = {
								add_progress = 0.6
								ignore_prereqs = yes
								area = engineering
								tier = 2
								fail_effects = {
									add_random_research_option = {
										add_progress = 0.6
										ignore_prereqs = yes
										area = engineering
										tier = 3
										fail_effects = {
											add_random_research_option = {
												add_progress = 0.6
												ignore_prereqs = yes
												area = engineering
												tier = 4
												fail_effects = {
													add_random_research_option = {
														add_progress = 0.6
														ignore_prereqs = yes
														area = engineering
														tier = 5
													}
												}
											}
										}
									}
								}
							}
						}
					}
					add_random_research_option = {
						add_progress = 0.6
						ignore_prereqs = yes
						area = physics
						tier = 1
						fail_effects = {
							add_random_research_option = {
								add_progress = 0.6
								ignore_prereqs = yes
								area = physics
								tier = 2
								fail_effects = {
									add_random_research_option = {
										add_progress = 0.6
										ignore_prereqs = yes
										area = physics
										tier = 3
										fail_effects = {
											add_random_research_option = {
												add_progress = 0.6
												ignore_prereqs = yes
												area = physics
												tier = 4
												fail_effects = {
													add_random_research_option = {
														add_progress = 0.6
														ignore_prereqs = yes
														area = physics
														tier = 5
													}
												}
											}
										}
									}
								}
							}
						}
					}
					add_random_research_option = {
						add_progress = 0.6
						ignore_prereqs = yes
						area = society
						tier = 1
						fail_effects = {
							add_random_research_option = {
								add_progress = 0.6
								ignore_prereqs = yes
								area = society
								tier = 2
								fail_effects = {
									add_random_research_option = {
										add_progress = 0.6
										ignore_prereqs = yes
										area = society
										tier = 3
										fail_effects = {
											add_random_research_option = {
												add_progress = 0.6
												ignore_prereqs = yes
												area = society
												tier = 4
												fail_effects = {
													add_random_research_option = {
														add_progress = 0.6
														ignore_prereqs = yes
														area = society
														tier = 5
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			every_owned_planet = {
				if = {
					limit = {
						NOT = { has_modifier = time_syndrome }
					}
					add_modifier = { modifier = time_syndrome years = 10 }
					while = {
						count = 10
						create_pop = {
							species = owner_main_species
							ethos = random
						}
					}
				}
			}
		}
	}
}

planet_event = {
	id = ethic_thirteen_monkeys.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		planet = { has_modifier = time_syndrome }
	}

	immediate = {
		kill_one_owner_species_pop = yes
	}
}


namespace = ethic_build_city
planet_event = {
	id = ethic_build_city.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { is_ai = yes }
		planet = {
			OR = {
				has_modifier = planet_housing_low
				has_modifier = planet_housing_no_happiness_low
			}
			num_free_districts = {
				type = any
				value > 0
			}
		}
	}

	immediate = {
		build_city = yes
	}
}
planet_event = {
	id = ethic_build_city.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { is_ai = yes }
		planet = {
			has_modifier = planet_overcrowded
			num_free_districts = {
				type = any
				value > 0
			}
		}
	}

	immediate = {
		build_city = yes
	}
}

namespace = ethic_auto_base
country_event = {
	id = ethic_auto_base.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_global_flag = eci_auto_base_yes
	}
	immediate = {
		every_owned_starbase = {
			limit = {
				solar_system = {
					any_neighbor_system = {
						has_owner = no
						is_surveyed = { who = root status = yes }
					}
				}
			}
			solar_system = {
				random_neighbor_system = {
					limit = {
						has_owner = no
						is_surveyed = { who = root status = yes }
						NOT = {
							any_fleet_in_system = {
								owner = {
									is_hostile = root
								}
							}
						}
						NOT = {
							any_neighbor_system = {
								owner = {
									has_ai_personality = fallen_empire_xenophobe
								}
							}
						}
					}
					create_starbase = {
						owner = root
						size = starbase_outpost
					}
				}
			}
		}
	}
}

namespace = ethic_advanced_start

planet_event = {
	id = ethic_advanced_start.0
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { owner = { has_origin = origin_advanced_start } }
			owner = {
				random_list = {
					1 = { set_variable = { which = system_count value = 2 } }
					1 = { set_variable = { which = system_count value = 3 } }
					1 = { set_variable = { which = system_count value = 4 } }
					1 = { set_variable = { which = system_count value = 5 } }
					1 = { set_variable = { which = system_count value = 6 } }
				}
				country_event = { id = game_start.6 }
			}
			advanced_cap_start = yes
			planet_event = { id = game_start.20 }
			planet_event = { id = game_start.22 }
			planet_event = { id = game_start.23 }
			create_fleet = {
				effect = {
					set_owner = root.owner

					create_ship = {
						name = random
						random_existing_design = constructor
					}

					set_fleet_stance = evasive
					set_location = root.owner.capital_star
				}
			}
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = root.owner
					random_list = {
						1 = {
							while = {
								count = 3
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 4
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 5
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 6
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 7
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
					}
					set_location = root.owner.capital_star
				}
			}
			solar_system = {
				while = {
					limit = {
						root.owner = {
							check_variable = {
								which = system_count
								value > 0
							}
						}
					}
					closest_system = {
						max_steps = 5
						limit = {
							NOT = { any_fleet_in_system = { exists = owner } }
							NOR = {
								has_star_flag = pirates_spawned
								has_star_flag = precursor_system
								has_star_flag = enclave
								any_ship_in_system = {
									exists = owner
									owner = {
										OR = {
											is_hostile = root.owner
											AND = {
												is_same_value = root.owner
												is_country_type = default
											}
										}
									}
								}
							}
						}
						if = {
							limit = {
								any_system_planet = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
							}
							random_system_planet = {
								limit = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
						}
						every_system_planet = {
							limit = {
								NOT = { has_planet_flag = prescripted_ideal }
								is_colony = no
								is_colonizable = yes
							}
							if = {
								limit = {
									habitability = {
										who = root.owner
										value >= 0.7
									}
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
							else = {
								random_list = {
									75 = {
										create_colony = {
											owner = root.owner
											species = root.owner
										}
										planet_event = { id = game_start.21 }
										planet_event = { id = game_start.22 }
										planet_event = { id = game_start.23 }
										advanced_start = yes
									}
									25 = {}
								}
							}
						}
						create_starbase = {
							size = starbase_outpost
							owner = root.owner
						}
						if = {
							limit = {
								any_fleet_in_system = {
									exists = owner
									owner = { is_same_value = root.owner }
								}
							}
							root.owner = { change_variable = { which = system_count value = -1 } }
						}
					}
				}
			}
			solar_system = {
				while = {
					limit = {
						root.owner = {
							check_variable = {
								which = system_count
								value > 0
							}
						}
					}
					closest_system = {
						max_steps = 5
						limit = {
							NOT = { any_fleet_in_system = { exists = owner } }
							OR = {
								has_star_flag = neighbor_t1
								has_star_flag = neighbor_t2
								has_star_flag = neighbor_t1_first_colony
								has_star_flag = neighbor_t2_second_colony
							}
							NOR = {
								has_star_flag = pirates_spawned
								has_star_flag = precursor_system
								has_star_flag = enclave
								any_ship_in_system = {
									exists = owner
									owner = {
										OR = {
											is_hostile = root.owner
											AND = {
												is_same_value = root.owner
												is_country_type = default
											}
										}
									}
								}
							}
						}
						if = {
							limit = {
								any_system_planet = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
							}
							random_system_planet = {
								limit = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
						}
						every_system_planet = {
							limit = {
								NOT = { has_planet_flag = prescripted_ideal }
								is_colony = no
								is_colonizable = yes
							}
							if = {
								limit = {
									habitability = {
										who = root.owner
										value >= 0.7
									}
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
							else = {
								random_list = {
									75 = {
										create_colony = {
											owner = root.owner
											species = root.owner
										}
										planet_event = { id = game_start.21 }
										planet_event = { id = game_start.22 }
										planet_event = { id = game_start.23 }
										advanced_start = yes
									}
									25 = {}
								}
							}
						}
						create_starbase = {
							size = starbase_outpost
							owner = root.owner
						}
						if = {
							limit = {
								any_fleet_in_system = {
									exists = owner
									owner = { is_same_value = root.owner }
								}
							}
							root.owner = { change_variable = { which = system_count value = -1 } }
						}
					}
				}
			}
		}
	}
}


namespace = ethic_true_yuht_start

planet_event = {
	id = ethic_true_yuht_start.0
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { owner = { has_origin = origin_true_yuht } }
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = root.owner
					while = {
						count = 17
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
					while = {
						count = 10
						create_ship = {
							name = random
							random_existing_design = destroyer
						}
					}
					set_location = root.owner.capital_star
				}
			}
		}
	}
}






#namespace = observation

# Societal Shift towards Individualist
#country_event = {
#	id = observation.0001
#	hide_window = yes
#
#	trigger = {
#		is_country_type = primitive
#		NOT = { has_ethic = ethic_fanatic_capitalism }
#		capital_scope = {
#			has_observation_outpost = yes
#			observation_outpost = { has_mission = native_indoctrination }
#			observation_outpost_owner = {
#				OR = {
#					has_ethic = ethic_fanatic_capitalism
#					has_ethic = ethic_capitalism
#				}
#			}
#			any_owned_pop = {
#				has_ethic = ethic_capitalism
#			}
#			OR = {
#				root = { NOT = { has_ethic = ethic_capitalism } }
#				count_pops = {
#					limit = { has_ethic = ethic_capitalism }
#					count > 1
#				}
#			}
#		}
#	}
#
#	mean_time_to_happen = {
#		months = 12
#	}
#
#	immediate = {
#		shift_ethic = "ethic_capitalism"
#		capital_scope = {
#			observation_outpost_owner = { country_event = { id = observation.0002 } }
#		}
#	}
#}

#country_event = {
#	id = observation.0002
#	title = "observation.0002.name"
#	desc = "observation.0002.desc"
#	picture = GFX_evt_medieval_alien_civilization
#	show_sound = event_primitive_civilization
#	location = from
#
#	is_triggered_only = yes
#
#	option = {
#		name = "observation.0002.a"
#	}
#}



# Societal Shift towards Collectivism
#country_event = {
#	id = observation.1001
#	hide_window = yes
#
#	trigger = {
#		is_country_type = primitive
#		NOT = { has_ethic = ethic_fanatic_socialism }
#		capital_scope = {
#			has_observation_outpost = yes
#			observation_outpost = { has_mission = native_indoctrination }
#			observation_outpost_owner = {
#				OR = {
#					has_ethic = ethic_fanatic_socialism
#					has_ethic = ethic_socialism
#				}
#			}
#			any_owned_pop = {
#				has_ethic = ethic_socialism
#			}
#			OR = {
#				root = { NOT = { has_ethic = ethic_socialism } }
#				count_pops = {
#					limit = { has_ethic = ethic_socialism }
#					count > 1
#				}
#			}
#		}
#	}
#
#	mean_time_to_happen = {
#		months = 12
#	}
#
#	immediate = {
#		shift_ethic = "ethic_socialism"
#		capital_scope = {
#			observation_outpost_owner = { country_event = { id = observation.1002 } }
#		}
#	}
#}

#country_event = {
#	id = observation.1002
#	title = "observation.0002.name"
#	desc = "observation.1002.desc"
#	picture = GFX_evt_medieval_alien_civilization
#	show_sound = event_primitive_civilization
#	location = from
#
#	is_triggered_only = yes
#
#	option = {
#		name = "observation.0002.a"
#	}
#}