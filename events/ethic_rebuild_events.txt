
namespace = immortal_ruler

country_event = {
	id = immortal_ruler.1
	title = "immortal_ruler.1.name"
	picture = GFX_evt_alien_propaganda
	show_sound = event_celebration
	desc = "immortal_ruler.1.desc"
	is_triggered_only = yes

	trigger = {
		is_ai = no
	}

	immediate = {
		every_owned_leader = {
			limit = { is_ruler = yes }
			add_trait = trait_ruler_immortal
			save_event_target_as = ruler
		}
		
		set_country_flag = flag_immortal_ruler
	}

	option = {
		name = "observation.0002.a"
	}

}




namespace = unity_patrons

country_event = {
	id = unity_patrons.1
	hide_window = yes
	is_triggered_only = yes
	location = ROOT 
	
	trigger = {
		has_valid_civic = civic_peacekeepers
	}	

	immediate = { 
	
		add_modifier = {
			modifier = "unity_patrons"
			days = 3650
		}
	
	}
	
}


namespace = glorious_fleet

# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2

country_event = {
	id = glorious_fleet.0
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_distinguished_admiralty
		not = { has_country_flag = glorious_fleet }
		not = { has_country_flag = unglorious_fleet }
	}	

	immediate = { 	
		add_modifier = {
			modifier = "glorious_fleet"
			days = 30
		}
		set_timed_country_flag = {
			flag = glorious_fleet
			days = 30 
		}		
	}
	
}


# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2

country_event = {
	id = glorious_fleet.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_valid_civic = civic_distinguished_admiralty
		not = { has_country_flag = glorious_fleet }
		not = { has_country_flag = unglorious_fleet }
	}	

	immediate = { 	
		add_modifier = {
			modifier = "unglorious_fleet"
			days = 30
		}
		set_timed_country_flag = {
			flag = unglorious_fleet
			days = 30 
		}		
	}
	
}



namespace = voice_planet

planet_event = {
	id = voice_planet.1
	hide_window = yes
	is_triggered_only = yes
	location = ROOT

	immediate = {
		if = {
			limit = {
				has_modifier = "dangerous_wildlife"
			}
			remove_modifier = "dangerous_wildlife"
		}
		if = {
			limit = {
				has_modifier = "bleak_planet"
			}
			remove_modifier = "bleak_planet"
		}
		if = {
			limit = {
				has_modifier = "hazardous_weather"
			}
			remove_modifier = "hazardous_weather"
		}
		if = {
			limit = {
				has_modifier = "wild_storms"
			}
			remove_modifier = "wild_storms"
		}
		if = {
			limit = {
				has_modifier = "damaged_ecology"
			}
			remove_modifier = "damaged_ecology"
		}
		if = {
			limit = {
				has_modifier = "wasteland_radiation"
			}
			remove_modifier = "wasteland_radiation"
		}
		if = {
			limit = {
				has_modifier = "irradiated_planet"
			}
			remove_modifier = "irradiated_planet"
		}
	}
}
planet_event = {
	id = voice_planet.2
	hide_window = yes
	is_triggered_only = yes
	location = ROOT

	immediate = {
		if = {
			limit = {
				has_modifier = "unstable_tectonics"
			}
			remove_modifier = "unstable_tectonics"
		}
		if = {
			limit = {
				has_modifier = "weak_magnetic_field"
			}
			remove_modifier = "weak_magnetic_field"
		}
		if = {
			limit = {
				has_modifier = "tidal_locked"
			}
			remove_modifier = "tidal_locked"
		}
		if = {
			limit = {
				has_modifier = "irradiated_planet"
			}
			remove_modifier = "irradiated_planet"
		}
		if = {
			limit = {
				has_modifier = "damaged_ecology"
			}
			remove_modifier = "damaged_ecology"
		}
		if = {
			limit = {
				has_modifier = "wasteland_radiation"
			}
			remove_modifier = "wasteland_radiation"
		}
		if = {
			limit = {
				has_modifier = "abandoned_terraforming"
			}
			remove_modifier = "abandoned_terraforming"
		}
	}
}
planet_event = {
	id = voice_planet.3
	hide_window = yes
	is_triggered_only = yes
	location = ROOT

	immediate = {
		reroll_deposits = yes
	}
}



namespace = ethic_rebuild_swarm

planet_event = {
	id = ethic_rebuild_swarm.1
	title = "ethic_rebuild_swarm.1.name"
	desc = "ethic_rebuild_swarm.1.desc"
	picture = GFX_evt_circuitry_modification
	is_triggered_only = yes

	trigger = {
		from = {
			is_hive_empire = yes
		}
		fromfrom = {
			is_robotic_species = no
			from = {
				owner_main_species = {
					NOT = { is_same_species = prevprev }
				}
			}
		}
		fromfrom.species = {
			NOT = { has_species_flag = eaten_by@root.owner }
		}
		NOT = {
			any_galaxy_species = {
				has_species_flag = eaten_by@root.owner
				is_same_species = fromfrom.species
			}
		}
	}

	immediate = {
		fromfrom.species = {
			set_species_flag = eaten_by@root.owner
		}
		from = {
			change_variable = {
				which = species_eaten
				value = 1
			}
			remove_modifier = swarm_species_eaten
			add_modifier = {
				modifier = swarm_species_eaten
				multiplier = species_eaten
			}
		}
	}

	option = {
		name = "ethic_rebuild_swarm.1.a"
	}
}

namespace = ethic_thirteen_monkeys

event = {
	id = ethic_thirteen_monkeys.0
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { has_origin = origin_thirteen_monkeys }
			if = {
				limit = {
					NOT = { has_modifier = time_syndrome_country }
				}
				add_modifier = { modifier = time_syndrome_country years = 10 }
				while = {
					count = 10
					add_random_research_option = {
						add_progress = 0.6
						ignore_prereqs = yes
						area = engineering
						tier = 1
						fail_effects = {
							add_random_research_option = {
								add_progress = 0.6
								ignore_prereqs = yes
								area = engineering
								tier = 2
								fail_effects = {
									add_random_research_option = {
										add_progress = 0.6
										ignore_prereqs = yes
										area = engineering
										tier = 3
										fail_effects = {
											add_random_research_option = {
												add_progress = 0.6
												ignore_prereqs = yes
												area = engineering
												tier = 4
												fail_effects = {
													add_random_research_option = {
														add_progress = 0.6
														ignore_prereqs = yes
														area = engineering
														tier = 5
													}
												}
											}
										}
									}
								}
							}
						}
					}
					add_random_research_option = {
						add_progress = 0.6
						ignore_prereqs = yes
						area = physics
						tier = 1
						fail_effects = {
							add_random_research_option = {
								add_progress = 0.6
								ignore_prereqs = yes
								area = physics
								tier = 2
								fail_effects = {
									add_random_research_option = {
										add_progress = 0.6
										ignore_prereqs = yes
										area = physics
										tier = 3
										fail_effects = {
											add_random_research_option = {
												add_progress = 0.6
												ignore_prereqs = yes
												area = physics
												tier = 4
												fail_effects = {
													add_random_research_option = {
														add_progress = 0.6
														ignore_prereqs = yes
														area = physics
														tier = 5
													}
												}
											}
										}
									}
								}
							}
						}
					}
					add_random_research_option = {
						add_progress = 0.6
						ignore_prereqs = yes
						area = society
						tier = 1
						fail_effects = {
							add_random_research_option = {
								add_progress = 0.6
								ignore_prereqs = yes
								area = society
								tier = 2
								fail_effects = {
									add_random_research_option = {
										add_progress = 0.6
										ignore_prereqs = yes
										area = society
										tier = 3
										fail_effects = {
											add_random_research_option = {
												add_progress = 0.6
												ignore_prereqs = yes
												area = society
												tier = 4
												fail_effects = {
													add_random_research_option = {
														add_progress = 0.6
														ignore_prereqs = yes
														area = society
														tier = 5
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			every_owned_planet = {
				if = {
					limit = {
						NOT = { has_modifier = time_syndrome }
					}
					add_modifier = { modifier = time_syndrome years = 10 }
					while = {
						count = 10
						create_pop = {
							species = owner_main_species
							ethos = random
						}
					}
				}
			}
		}
	}
}

planet_event = {
	id = ethic_thirteen_monkeys.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		planet = { has_modifier = time_syndrome }
	}

	immediate = {
		kill_one_owner_species_pop = yes
	}
}


namespace = ethic_bureaucratic_building
planet_event = {
	id = ethic_bureaucratic_building.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = yes
			is_regular_empire = yes
			has_monthly_income = { resource = administrative_capacity_calculation value < 0 }
		}
		planet = {
			allow_bureaucratic_building = yes
		}
	}

	immediate = {
		build_bureaucratic_building = yes
	}
}


namespace = ethic_build_city
planet_event = {
	id = ethic_build_city.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { is_ai = yes }
		planet = {
			free_housing < -10
			num_free_districts = {
				type = any
				value > 0
			}
		}
	}

	immediate = {
		build_city = yes
	}
}
planet_event = {
	id = ethic_build_city.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { is_ai = yes }
		planet = {
			free_housing < 0
			num_free_districts = {
				type = any
				value > 0
			}
		}
	}

	immediate = {
		build_city = yes
	}
}
planet_event = {
	id = ethic_build_city.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			OR = {
				has_policy_flag = private_ownership
				has_policy_flag = mixed_ownership
				has_policy_flag = family_ownership
			}
		}
		planet = {
			has_upgraded_capital = yes
			free_building_slots > 0
		}
	}

	immediate = {
		random_list = {
			5 = {}
			5 = {
				add_building = building_private_commercial_megaplex
				owner = {
					add_resource = { energy = 1000 }
				}
				modifier = {
					add = 5
					owner = { has_policy_flag = private_ownership }
				}
			}
		}
	}
}
planet_event = {
	id = ethic_build_city.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = yes
			has_active_tradition = tr_future_industry
			has_technology = tech_ascension_theory
		}
		planet = {
			num_unemployed > 15
			NOT = { has_modifier = planet_unemployment_benefits }
		}
	}

	immediate = {
		add_modifier = { modifier = "planet_unemployment_benefits" days = -1 }
	}
}

namespace = ethic_auto_base
country_event = {
	id = ethic_auto_base.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_global_flag = eci_auto_base_yes
	}
	immediate = {
		every_owned_starbase = {
			limit = {
				solar_system = {
					any_neighbor_system = {
						has_owner = no
						is_surveyed = { who = root status = yes }
					}
				}
			}
			solar_system = {
				every_neighbor_system = {
					limit = {
						has_owner = no
						is_surveyed = { who = root status = yes }
						NOT = {
							any_fleet_in_system = {
								owner = {
									is_hostile = root
								}
							}
						}
						NOT = {
							any_neighbor_system = {
								owner = {
									has_ai_personality = fallen_empire_xenophobe
								}
							}
						}
					}
					create_starbase = {
						owner = root
						size = starbase_outpost
					}
				}
			}
		}
	}
}

namespace = ethic_advanced_start
planet_event = {
	id = ethic_advanced_start.0
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { owner = { has_origin = origin_advanced_start } }
			owner = {
				random_list = {
					1 = { set_variable = { which = system_count value = 2 } }
					1 = { set_variable = { which = system_count value = 3 } }
					1 = { set_variable = { which = system_count value = 4 } }
					1 = { set_variable = { which = system_count value = 5 } }
					1 = { set_variable = { which = system_count value = 6 } }
				}
				country_event = { id = game_start.6 }
			}
			planet_event = { id = game_start.20 }
			planet_event = { id = game_start.22 }
			planet_event = { id = game_start.23 }
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = root.owner
					random_list = {
						1 = {
							while = {
								count = 3
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 4
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 5
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 6
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
						1 = {
							while = {
								count = 7
								create_ship = {
									name = random
									random_existing_design = corvette
								}
							}
						}
					}
					random_list = {
						1 = {
							while = {
								count = 1
								create_ship = {
									name = random
									random_existing_design = destroyer
								}
							}
						}
						1 = {
							while = {
								count = 2
								create_ship = {
									name = random
									random_existing_design = destroyer
								}
							}
						}
						1 = {
							while = {
								count = 3
								create_ship = {
									name = random
									random_existing_design = destroyer
								}
							}
						}
					}
					set_location = root.owner.capital_star
				}
			}
			solar_system = {
				if = {
					limit = {
						root.owner = {
							check_variable = {
								which = system_count
								value > 0
							}
						}
					}
					closest_system = {
						max_steps = 5
						limit = {
							NOT = { any_fleet_in_system = { exists = owner } }
							NOR = {
								has_star_flag = pirates_spawned
								has_star_flag = precursor_system
								has_star_flag = enclave
								any_ship_in_system = {
									exists = owner
									owner = {
										OR = {
											is_hostile = root.owner
											AND = {
												is_same_value = root.owner
												is_country_type = default
											}
										}
									}
								}
							}
						}
						create_starbase = {
							size = starbase_outpost
							owner = root.owner
						}
						if = {
							limit = {
								any_system_planet = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
							}
							random_system_planet = {
								limit = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
						}
						every_system_planet = {
							limit = {
								NOT = { has_planet_flag = prescripted_ideal }
								is_colony = no
								is_colonizable = yes
							}
							if = {
								limit = {
									habitability = {
										who = root.owner
										value >= 0.7
									}
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
							else = {
								random_list = {
									75 = {
										create_colony = {
											owner = root.owner
											species = root.owner
										}
										planet_event = { id = game_start.21 }
										planet_event = { id = game_start.22 }
										planet_event = { id = game_start.23 }
										advanced_start = yes
									}
									25 = {}
								}
							}
						}
						create_starbase = {
							size = starbase_outpost
							owner = root.owner
						}
						if = {
							limit = {
								any_fleet_in_system = {
									exists = owner
									owner = { is_same_value = root.owner }
								}
							}
							root.owner = { change_variable = { which = system_count value = -1 } }
						}
					}
				}
			}
			solar_system = {
				if = {
					limit = {
						root.owner = {
							check_variable = {
								which = system_count
								value > 0
							}
						}
					}
					closest_system = {
						max_steps = 5
						limit = {
							NOT = { any_fleet_in_system = { exists = owner } }
							OR = {
								has_star_flag = neighbor_t1
								has_star_flag = neighbor_t2
								has_star_flag = neighbor_t1_first_colony
								has_star_flag = neighbor_t2_second_colony
							}
							NOR = {
								has_star_flag = pirates_spawned
								has_star_flag = precursor_system
								has_star_flag = enclave
								any_ship_in_system = {
									exists = owner
									owner = {
										OR = {
											is_hostile = root.owner
											AND = {
												is_same_value = root.owner
												is_country_type = default
											}
										}
									}
								}
							}
						}
						create_starbase = {
							size = starbase_outpost
							owner = root.owner
						}
						if = {
							limit = {
								any_system_planet = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
							}
							random_system_planet = {
								limit = {
									has_planet_flag = prescripted_ideal
									is_colony = no
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
						}
						every_system_planet = {
							limit = {
								NOT = { has_planet_flag = prescripted_ideal }
								is_colony = no
								is_colonizable = yes
							}
							if = {
								limit = {
									habitability = {
										who = root.owner
										value >= 0.7
									}
								}
								create_colony = {
									owner = root.owner
									species = root.owner
								}
								planet_event = { id = game_start.21 }
								planet_event = { id = game_start.22 }
								planet_event = { id = game_start.23 }
								advanced_start = yes
							}
							else = {
								random_list = {
									75 = {
										create_colony = {
											owner = root.owner
											species = root.owner
										}
										planet_event = { id = game_start.21 }
										planet_event = { id = game_start.22 }
										planet_event = { id = game_start.23 }
										advanced_start = yes
									}
									25 = {}
								}
							}
						}
						create_starbase = {
							size = starbase_outpost
							owner = root.owner
						}
						if = {
							limit = {
								any_fleet_in_system = {
									exists = owner
									owner = { is_same_value = root.owner }
								}
							}
							root.owner = { change_variable = { which = system_count value = -1 } }
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = ethic_advanced_start.1
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_origin = origin_advanced_start }
	immediate = {
		every_owned_starbase = {
			limit = {
				always = yes
			}
			solar_system = {
				while = {
					count = 1
					every_neighbor_system = {
						limit = {
							has_owner = no
							NOT = { has_star_flag = guardian }
							NOT = {
								any_neighbor_system = {
									starbase = {
										owner = { has_country_flag = fallen_empire_4 }
									}
								}
							}
						}
						create_starbase = {
							size = starbase_outpost
							owner = root
						}
					}
				}
			}
		}
		#矿球
		random_planet_within_border = {
			limit = {
				is_ringworld = no
				is_asteroid = no
				is_star = no
				is_moon = no
				is_colonizable = no
				NOT = { is_planet_class = pc_gas_giant }
			}
			if = {
				limit = { root = { is_machine_empire = no } }
				change_pc = root.owner_main_species
			}
			if = {
				limit = { root = { is_machine_empire = yes } }
				random_list = {
					10 = { change_pc = pc_arid }
					10 = { change_pc = pc_desert }
					10 = { change_pc = pc_savannah }
				}
			}
			set_owner = root
			set_planet_size = 24
			clear_planet_modifiers = yes
			advanced_start_pops_and_buildings = yes
			reroll_deposits = yes
			remove_all_districts = yes
			clear_blockers = yes
			add_modifier = { modifier = ultra_rich }
			add_deposit = d_rich_mountain
			add_deposit = d_dust_desert
			while = {
				count = 2
				add_building = building_mote_harvesters
			}
			planet_event = { id = game_start.21 }
			planet_event = { id = game_start.22 }
			planet_event = { id = game_start.23 }
			random_list = {
				40 = { add_deposit = d_submerged_ore_veins }
				30 = { add_deposit = d_ore_rich_caverns }
				30 = { add_deposit = d_prosperous_mesa }
			}
			while = {
				count = 8
				add_district = district_mining
			}
			set_colony_type = col_mining
		}
		#电球
		random_planet_within_border = {
			limit = {
				is_ringworld = no
				is_asteroid = no
				is_star = no
				is_moon = no
				is_colonizable = no
				NOT = {
					is_planet_class = pc_gas_giant
				}
			}
			set_planet_size = 22
			if = { limit = { root = { is_machine_empire = no } }
				change_pc = root.owner_main_species }
			if = { limit = { root = { is_machine_empire = yes } }
				random_list = {
					10 = { change_pc = pc_tundra }
					10 = { change_pc = pc_alpine }
					10 = { change_pc = pc_arctic }
				}
			}
			set_owner = root
			clear_planet_modifiers = yes
			advanced_start_pops_and_buildings = yes
			reroll_deposits = yes
			remove_all_districts = yes
			clear_blockers = yes
			add_modifier = { modifier = hazardous_weather }
			add_deposit = d_tempestous_mountain
			add_deposit = d_crystal_forest
			planet_event = { id = game_start.21 }
			planet_event = { id = game_start.22 }
			planet_event = { id = game_start.23 }
			while = {
				count = 2
				add_building = building_crystal_mines
			}
			random_list ={
				40 = { add_deposit = d_underwater_vent }
				20 = { add_deposit = d_frozen_gas_lake }
				20 = { add_deposit = d_searing_desert }
				10 = { add_deposit = d_hot_springs }
				10 = { add_deposit = d_arid_highlands }
			}
			while = {
				count = 8
				add_district = district_generator
			}
			set_colony_type = col_generator
		}
		#工业球
		random_planet_within_border = {
			limit = {
				is_ringworld = no
				is_asteroid = no
				is_star = no
				is_moon = no
				is_colonizable = no
				NOT = {
					is_planet_class = pc_gas_giant
				}
			}
			set_planet_size = 21
			if = {
				limit = { root = { is_machine_empire = no } }
				change_pc = root.owner_main_species
			}
			if = { limit = { root = { is_machine_empire = yes } }
				random_list = {
					10 = { change_pc = pc_continental }
					10 = { change_pc = pc_ocean }
					10 = { change_pc = pc_tropical }
				}
			}
			set_owner = root
			clear_planet_modifiers = yes
			advanced_start_pops_and_buildings = yes
			if = { limit = { owner = { is_gestalt = no } NOT = { has_building = building_factory_1 } }
				add_building = building_factory_1
			}
			if = { limit = { owner = { is_gestalt = yes } NOT = { has_building = building_foundry_1 } }
				add_building = building_foundry_1
			}
			reroll_deposits = yes
			remove_all_districts = yes
			clear_blockers = yes
			add_deposit = d_fuming_bog
			while = {
				count = 2
				add_building = building_gas_extractors
			}
			planet_event = { id = game_start.21 }
			planet_event = { id = game_start.22 }
			planet_event = { id = game_start.23 }
			while = {
				count = 8
				add_district = district_industrial
			}
			set_colony_type = col_industrial
		}
	}
}

namespace = ethic_wandering_planet
planet_event = {
	id = ethic_wandering_planet.0
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { owner = { has_origin = origin_wandering_planet } }
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = root.owner
					create_ship = {
						name = "NAME_Laurel"
						prefix = no
						design = "NAME_wandering_planet"
					}
					set_location = root
				}
			}
		}
	}
}


namespace = ethic_true_yuht_start

planet_event = {
	id = ethic_true_yuht_start.0
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { owner = { has_origin = origin_true_yuht } }
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = root.owner
					while = {
						count = 17
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
					while = {
						count = 10
						create_ship = {
							name = random
							random_existing_design = destroyer
						}
					}
					set_location = root.owner.capital_star
				}
			}
		}
	}
}


namespace = ethic_techsetunity
country_event = {
	id = ethic_techsetunity.0
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_valid_civic = civic_approaching_science
	}

	immediate = {
		add_monthly_resource_mult = {
			resource = unity
			value = 2
		}
	}
}

namespace = ethic_first_contact
first_contact_event = {
	id = ethic_first_contact.0
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = { has_country_flag = Story7 }
			NOT = { has_country_flag = true_yuht_discovering_aliens }
		}
	}

	immediate = {
		owner = { set_country_flag = true_yuht_discovering_aliens }
	}
}

namespace = eci_legendary_leader
country_event = {
	id = eci_legendary_leader.0
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { is_gestalt = no }
	}

	immediate = {
		every_owned_leader = {
			limit = {
				has_leader_flag = leader_laquly
				NOT = { has_trait = leader_trait_eci_legendary_leader }
			}
			add_trait = leader_trait_eci_legendary_leader
		}
		every_owned_leader = {
			limit = {
				has_skill >= 10
				NOR = {
					has_trait = leader_trait_eci_legendary_leader
					is_councilor_direct_democratic = yes
				}
			}
			set_leader_flag = leader_laquly
			add_trait = leader_trait_eci_legendary_leader
		}
	}
}

namespace = eci_origin_galaxy_iron_curtain
country_event = {
	id = eci_origin_galaxy_iron_curtain.0
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_galaxy_iron_curtain }
	}

	immediate = {
		set_country_type = eci_primitive
		remove_pre_ftl_flags = yes
		set_pre_ftl_age = atomic_age
		set_country_flag = atomic_age
		set_country_flag = recently_advanced
		eci_primitive_trade = yes
		capital_scope = {
			remove_all_buildings = yes
			add_building = building_primitive_capital
			add_building = building_commercial_zone
			add_building = building_luxury_residence
			add_building = building_luxury_residence
			add_building = building_luxury_residence
			add_building = building_luxury_residence
			add_deposit = d_decrepit_dwellings
			add_deposit = d_failing_infrastructure
			add_deposit = d_ethic_primitive_trade
			solar_system = {
				starbase = { fleet = { delete_fleet = this } }
			}
		}
		add_modifier = { modifier = patent_protection years = 99 }
		add_modifier = { modifier = energy_revolution years = 99 }
		add_modifier = { modifier = agriculturala_monopoly years = 99 }
		add_modifier = { modifier = mineral_finance years = 99 }
		add_modifier = { modifier = consumer_oligarch years = 99 }
		add_modifier = { modifier = steel_tycoon years = 99 }
	}
}
country_event = {
	id = eci_origin_galaxy_iron_curtain.1
	title = eci_origin_galaxy_iron_curtain.1.name
	desc = eci_origin_galaxy_iron_curtain.1.desc
	picture = GFX_evt_burning_city

	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_galaxy_iron_curtain
			is_capitalism = no
			NOT = { has_country_flag = not_capitalism }
		}
	}

	immediate = {
		set_country_flag = not_capitalism
	}

	option = {
		name = eci_origin_galaxy_iron_curtain.1.a
		every_owned_planet = { add_planet_devastation = 15 }
		add_research_option = tech_planetary_government
		remove_modifier = energy_revolution
		remove_modifier = agriculturala_monopoly
		remove_modifier = mineral_finance
	}

	option = {
		name = eci_origin_galaxy_iron_curtain.1.b
		every_owned_planet = { add_planet_devastation = 50 }
		shift_ethic = ethic_fanatic_socialism
		add_research_option = tech_planetary_government
		remove_modifier = patent_protection
		remove_modifier = energy_revolution
		remove_modifier = agriculturala_monopoly
		remove_modifier = mineral_finance
		remove_modifier = consumer_oligarch
		remove_modifier = steel_tycoon
		hidden_effect = {
			if = {
				limit = { is_direct_democratic = yes }
				force_add_civic = civic_debug
				force_remove_civic = civic_debug
			}
		}
	}

	option = {
		name = eci_origin_galaxy_iron_curtain.1.c
		every_owned_planet = { add_planet_devastation = 5 }
		shift_ethic = ethic_fanatic_capitalism
		add_research_option = tech_planetary_government
		hidden_effect = {
			every_owned_pop = {
				random_list = {
					9 = { }
					1 = { kill_pop = yes }
				}
			}
		}
	}
}
country_event = {
	id = eci_origin_galaxy_iron_curtain.2
	title = eci_origin_galaxy_iron_curtain.2.name
	desc = eci_origin_galaxy_iron_curtain.2.desc
	picture = GFX_evt_early_space_age

	is_triggered_only = yes

	trigger = {
		owner = {
			has_origin = origin_galaxy_iron_curtain
			has_technology = tech_planetary_government
			OR = {
				has_technology = tech_warp_drive_1
				has_technology = tech_hyper_drive_1
			}
		}
	}

	immediate = {
		set_country_type = default
		remove_pre_ftl_flags = yes
		remove_country_flag = recently_advanced
		capital_scope = {
			remove_building = building_primitive_capital
			add_building = building_capital
			solar_system = {
				create_starbase = {
					size = starbase_outpost
					owner = root.owner
				}
			}
		}
		set_origin = origin_default
		remove_modifier = patent_protection
		if = {
			limit = { is_socialism = yes }
			remove_modifier = energy_revolution
			remove_modifier = agriculturala_monopoly
			remove_modifier = mineral_finance
			remove_modifier = consumer_oligarch
			remove_modifier = steel_tycoon
		}
		if = {
			limit = { is_direct_democratic = yes }
			force_add_civic = civic_debug
			force_remove_civic = civic_debug
		}
	}

	option = {
		name = eci_origin_galaxy_iron_curtain.2.a
		add_modifier = { modifier = look_into_the_future years = 15 }
	}
}

namespace = eci_trade_optimization
country_event = {
	id = eci_trade_optimization.0
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			has_global_flag = PF_flg_glbl_trade_ban	#_|贸易禁止|
			has_global_flag = PF_flg_glbl_trade_opt	#_|贸易优化|
			owner = { is_country_type = eci_primitive }
		}
	}

	immediate = {
		eci_primitive_trade = yes
		if = {
			limit = {
				any_owned_planet = { NOT = { has_deposit = d_ethic_primitive_trade } }
			}
			every_owned_planet = { add_deposit = d_ethic_primitive_trade }
		}
	}
}
country_event = {
	id = eci_trade_optimization.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOR = {
			has_global_flag = PF_flg_glbl_trade_ban	#_|贸易禁止|
			has_global_flag = PF_flg_glbl_trade_opt	#_|贸易优化|
			owner = { is_country_type = eci_primitive }
		}
	}

	immediate = {
		if = {
			limit = {
				any_owned_planet = { has_deposit = d_ethic_primitive_trade }
			}
			every_owned_planet = { remove_deposit = d_ethic_primitive_trade }
		}
	}
}

namespace = eci_civic_military_junta
country_event = {
	id = eci_civic_military_junta.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_military_junta = yes
	}

	immediate = {
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = 120
			}
		}
	}
}
country_event = {
	id = eci_civic_military_junta.2
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_military_junta = yes
	}

	immediate = {
		add_modifier = { modifier = military_junta_war_lost years = 5 }
	}
}

namespace = eci_civic_peaceful_republic
country_event = {
	id = eci_civic_peaceful_republic.0
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_peaceful_republic = yes
		NOR = {
			has_modifier = sustained_peace_1
			has_modifier = sustained_peace_2
			has_modifier = sustained_peace_3
			has_modifier = sustained_peace_4
			has_modifier = sustained_peace_5
		}
	}

	immediate = {
		country_event = { id = eci_civic_peaceful_republic.1 days = 3600 }
	}
}
country_event = {
	id = eci_civic_peaceful_republic.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_peaceful_republic = yes
	}

	immediate = {
		add_modifier = { modifier = sustained_peace_1 years = -1 }
		country_event = { id = eci_civic_peaceful_republic.2 days = 3600 }
	}
}
country_event = {
	id = eci_civic_peaceful_republic.2
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_peaceful_republic = yes
	}

	immediate = {
		remove_modifier = sustained_peace_1
		add_modifier = { modifier = sustained_peace_2 years = -1 }
		country_event = { id = eci_civic_peaceful_republic.3 days = 3600 }
	}
}
country_event = {
	id = eci_civic_peaceful_republic.3
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_peaceful_republic = yes
	}

	immediate = {
		remove_modifier = sustained_peace_2
		add_modifier = { modifier = sustained_peace_3 years = -1 }
		country_event = { id = eci_civic_peaceful_republic.4 days = 3600 }
	}
}
country_event = {
	id = eci_civic_peaceful_republic.4
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_peaceful_republic = yes
	}

	immediate = {
		remove_modifier = sustained_peace_3
		add_modifier = { modifier = sustained_peace_4 years = -1 }
		country_event = { id = eci_civic_peaceful_republic.5 days = 3600 }
	}
}
country_event = {
	id = eci_civic_peaceful_republic.5
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_valid_peaceful_republic = yes
	}

	immediate = {
		remove_modifier = sustained_peace_4
		add_modifier = { modifier = sustained_peace_5 years = -1 }
	}
}
country_event = {
	id = eci_civic_peaceful_republic.6
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			has_modifier = sustained_peace_1
			has_modifier = sustained_peace_2
			has_modifier = sustained_peace_3
			has_modifier = sustained_peace_4
			has_modifier = sustained_peace_5
		}
	}

	immediate = {
		remove_modifier = sustained_peace_1
		remove_modifier = sustained_peace_2
		remove_modifier = sustained_peace_3
		remove_modifier = sustained_peace_4
		remove_modifier = sustained_peace_5
	}
}
country_event = {
	id = eci_civic_peaceful_republic.7
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = { is_valid_peaceful_republic = yes }
		OR = {
			has_modifier = sustained_peace_1
			has_modifier = sustained_peace_2
			has_modifier = sustained_peace_3
			has_modifier = sustained_peace_4
			has_modifier = sustained_peace_5
		}
	}

	immediate = {
		remove_modifier = sustained_peace_1
		remove_modifier = sustained_peace_2
		remove_modifier = sustained_peace_3
		remove_modifier = sustained_peace_4
		remove_modifier = sustained_peace_5
	}
}




namespace = auto_branch_offices

event = {
	id = auto_branch_offices.0
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galaxy_planet = {
			limit = {
				exists = owner
				owner = {
					OR = {
						is_eci_megacorp = yes
						is_valid_beacon_of_liberty = yes
					}
				}
			}
			establish_branch_office = owner
		}
	}

}

planet_event = {
	id = auto_branch_offices.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			OR = {
				is_eci_megacorp = yes
				has_active_tradition = tr_future_economy
				is_valid_beacon_of_liberty = yes
			}
		}
	}

	immediate = {
		establish_branch_office = this.owner
	}

}
namespace = life
country_event = {
	id = life.0
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_sprout
	}

	immediate = {
		every_owned_planet = {
			limit = {
				has_planet_flag = origin_sprout
			}
			change_pc = pc_gaia
		}
		country_event = { id = life.1 days = 36000000000 random = 36000000000 }
	}
}

country_event = {
	id = life.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_sprout
	}

	immediate = {
		every_owned_planet = {
			limit = {
				has_planet_flag = origin_sprout
			}
			if = {
				limit = { is_gestalt = no }
				add_building = building_crude_huts
				add_building = building_primitive_dwellings
			}
			if = {
				limit = { is_gestalt = yes }
				add_building = building_hive_crude_huts
				add_building = building_hive_primitive_dwellings
			}
			while = {
				count = 2
				create_pop = { species = owner_main_species }
			}
		}
		country_event = { id = life.2 days = 900000 random = 900000 }
	}
}

country_event = {
	id = life.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_sprout
	}

	immediate = {
		every_owned_planet = {
			limit = {
				has_planet_flag = origin_sprout
			}
			if = {
				limit = { is_gestalt = no }
				remove_all_buildings = yes
				add_building = building_stone_palace
				add_building = building_primitive_dwellings
				add_building = building_primitive_dwellings
				add_building = building_primitive_dwellings
			}
			if = {
				limit = { is_gestalt = yes }
				remove_all_buildings = yes
				add_building = building_hive_stone_palace
				add_building = building_hive_primitive_dwellings
				add_building = building_hive_primitive_dwellings
				add_building = building_hive_primitive_dwellings
			}
			while = {
				count = 8
				create_pop = { species = owner_main_species }
			}
		}
		country_event = { id = life.3 days = 180000 random = 180000 }
	}
}

country_event = {
	id = life.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_sprout
	}

	immediate = {
		every_owned_planet = {
			limit = {
				has_planet_flag = origin_sprout
			}
			if = {
				limit = { is_gestalt = no }
				remove_all_buildings = yes
				add_building = building_primitive_capital
				add_building = building_urban_dwellings
				add_building = building_primitive_mine
				add_building = building_primitive_power_plant
				add_building = building_primitive_farm
				add_building = building_primitive_factory
			}
			if = {
				limit = { is_gestalt = yes }
				remove_all_buildings = yes
				add_building = building_hive_primitive_capital
				add_building = building_hive_urban_dwellings
				add_building = building_hive_primitive_mine
				add_building = building_hive_primitive_power_plant
				add_building = building_hive_primitive_farm
				add_building = building_hive_primitive_factory
			}
			while = {
				count = 10
				create_pop = { species = owner_main_species }
			}
		}
		country_event = { id = life.4 days = 72000 random = 72000 }
	}
}

country_event = {
	id = life.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_sprout
	}

	immediate = {
		set_country_type = default
		set_origin = origin_default
		every_owned_planet = {
			limit = {
				has_planet_flag = origin_sprout
			}
			remove_all_buildings = yes
			while = {
				count = 10
				create_pop = { species = owner_main_species }
			}
			add_building = building_capital
			solar_system = {
				create_starbase = {
					size = starbase_outpost
					owner = root.owner
				}
			}
			planet_event = { id = game_start.22 }
		}
	}
}
