## Categories used in this file must have use_for_ai_budget = yes defined in economic_categories ##
## It is possible to have multiple entries with the same category and resource ##

#################
## Expenditure ##
#################

aicbm_unity_expenditure_planets = {
	resource = unity
	type = expenditure
	category = planets #泛用#

	potential = {
		# only consider campaigns when we can actually afford them
		has_resource = { 
			type = unity 
			amount > 3000
		}
	}

	weight = {
		weight = 0.1
	}

	static_min = {
		base = 100
	}

	static_max = {
		base = 450
	}
}

aicbm_unity_expenditure_decisions = {
	resource = unity 
	type = expenditure
	category = decisions #泛用#
	
	potential = {
		# only consider campaigns when we can actually afford them
		has_resource = { 
			type = unity 
			amount > 30000
		}
	}
	
	weight = {
		weight = 0.10
		modifier = {
			factor = 3
			has_resource = { 
				type = unity 
				amount > 50000
			}
		}
	}
	static_max = {
		base = 1500
	}
}
aicbm_unity_expenditure_ships = {
	resource = unity
	type = expenditure
	category = ships

	potential = {
		has_resource = { 
			type = unity 
			amount > 58000
		}
	}

	weight = {
		weight = 0.1
	}
	static_max = {
		base = 300
	}
}

aicbm_unity_expenditure_edicts = {
	resource = unity 
	type = expenditure
	category = edicts
	
	potential = {
		has_resource = { 
			type = unity
			amount > 8000
		}
		has_technology = tech_ascension_theory
	}
	
	weight = {
		weight = 0.1
        # 
	}
	static_min = {
		base = 100
	}		
	static_max = {
		base = 3000
	}
}
unity_expenditure_megastructures = {
	resource = unity
	type = expenditure
	category = megastructures

	potential = {
		is_at_war = no
		can_build_unity_megastructures = yes

		has_resource = {
			type = unity
			amount > 7500
		}
	}

	weight = {
		weight = 0.1
	}
	desired_max = {
		base = 17500
	}
}
unity_expenditure_traditions = {
	resource = unity
	type = expenditure
	category = traditions

	potential = {
		always = yes
	}

	weight = {
		weight = 0.8
		modifier = {
			factor = 1.5
			has_monthly_income = { resource = unity value > 100 }
		}
		modifier = {
			factor = 1.5
			has_monthly_income = { resource = unity value > 300 }
		}
		modifier = {
			factor = 2
			has_monthly_income = { resource = unity value > 1000 }
		}
		modifier = {
			factor = 3
			has_monthly_income = { resource = unity value > 2500 }
		}
		modifier = {
			factor = 5
			has_monthly_income = { resource = unity value > 7000 }
		}
		modifier = {
			factor = 1.5
			has_resource = {
				type = unity
				amount > 10000
			}
		}
		modifier = {
			factor = 1.5
			has_resource = {
				type = unity
				amount > 25000
			}
		}
		modifier = {
			factor = 2
			has_resource = {
				type = unity
				amount > 50000
			}
		}
		modifier = {
			factor = 3
			has_resource = {
				type = unity
				amount > 100000
			}
		}
		modifier = {
			factor = 5
			has_resource = {
				type = unity
				amount > 250000
			}
		}
	}
}

unity_expenditure_missing_scientist = {
	resource = unity
	type = expenditure
	category = leaders

	potential = {
		always = yes
	}

	weight = {
		weight = 40
		modifier = {
			factor = 0.01
			check_variable = { which = learder_cap_nums value < trigger:num_owned_leaders }
		}
	}

	desired_max = {
		base = 1500
	}
}
unity_expenditure_leaders = {
	resource = unity
	type = expenditure
	category = leaders

	potential = {
		always = yes
	}

	weight = {
		weight = 40
		modifier = {
			factor = 0.01
			check_variable = { which = learder_cap_nums value < trigger:num_owned_leaders }
		}
	}
}

############################keep_up#####################
aicbm_unity_upkeep_country = { # Covers most other things
	resource = unity 
	type = upkeep
	category = country
	
	potential = {
		has_resource = { 
			type = unity
			amount > 800
		}
	}
	
	weight = {
		weight = 1
	}	
}
unity_upkeep_edicts = {
	resource = unity
	type = upkeep
	category = edicts

	potential = {
		has_resource = { 
			type = unity
			amount > 800
		}
	}

	weight = {
		weight = 0.2
	}
}

unity_upkeep_leaders = {
	resource = unity
	type = upkeep
	category = leaders

	potential = {
		OR = {
			AND = {
				is_regular_empire = yes
				NOR = {
					has_valid_civic = civic_feudal_realm
				}
			}
			has_valid_civic = civic_aristocratic_elite
		}
	}

	weight = {
		weight = 0.4
	}

	desired_min = {
		base = 50
	}

	desired_max = {
		base = 500
	}
}