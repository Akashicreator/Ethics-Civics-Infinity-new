# This file contains presets that are selectable when proposing an Agreement.
# The terms of the preset are defined as key/value pairs.
# Would be nice to make scripting of the key/value pairs less verbose, but that requires some more work with serialization.

# Example:
#
# name_of_preset = {
# 	term_data = {
# 		discrete_terms = {						# The default discrete terms of this preset
# 			{
# 				key = name_of_term				# The term name, as defined in agreement_terms
# 				value = name_of_term_value		# The term value to use, as defined in agreement_term_values
# 			}
# 			{
# 				key = name_of_other_term
# 				value = name_of_other_term_value
# 			}
# 		}
#		resource_terms = {
#			{
#				key = name_of_resource_term_value # The resource term value to use, as defined in agreement_term_values
#				value = <number>				# subsidy percentage
#			}
#		}
# 	}
# }
preset_uo_une_member = {
	icon = "GFX_diplomacy_status_is_vassal"
	term_data = {
		#resource_terms = {
		#	{ key = resource_subsidies_basic value = -0.15 }
		#	{ key = resource_subsidies_advanced value = -0.15 }
		#	{ key = resource_subsidies_strategic value = -0.15 }
		#	{ key = resource_subsidies_research value = -0.15 }
		#}
		discrete_terms = {
			{ key = specialist_type value = specialist_none }
			{ key = subject_integration value = subject_can_not_be_integrated }
			{ key = subject_diplomacy value = subject_can_do_diplomacy }
			{ key = subject_expand value = subject_can_expand }
			{ key = joins_overlord_wars value = joins_overlord_wars_defensive }
			{ key = joins_subject_wars value = joins_subject_wars_defensive }
			{ key = subject_holdings_limit value = subject_holdings_limit_1 }
			{ key = subject_loyalty value = subject_loyalty_effects }
			{ key = protectorate value = subject_is_not_protectorate }
			{ key = subject_sensors value = subject_gets_sensors }
		}
	}
	overlord_weight = { base = 100 }
	subject_weight = { base = 100 }
	potential = {
		from = { has_origin = uo_origin_une }
		has_origin = uo_origin_une_member
	}
}