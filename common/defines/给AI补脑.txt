	NGameplay = {
		ADVANCED_EMPIRE_EXTRA_WARSHIPS_MIN = 0
		ADVANCED_EMPIRE_EXTRA_WARSHIPS_MAX = 1
	}

	NShip = {
		DESIGNER_WEAPON_PREF_MUL			= 1
		DESIGNER_WEAPON_STACKING_DIV		= 0.5

		DEFAULT_ARMOR_RATIO = 0.1
		DEFAULT_SHIELD_RATIO = 0.4
	}

	NAI = {
		AI_FREE_JOBS_DISTRICT_BUILD_CAP = 6			# AI不会在一个拥有这么多空闲岗位的星球上建造新的区划
		AI_FREE_JOBS_BUILDING_BUILD_CAP = 6			# AI不会在一个拥有这么多空闲岗位的星球上建造新的建筑
		AI_DEFICIT_SCORE_MULT = 200					# AI将为生产资源短缺的建筑物进行评分
		AI_FOCUS_SCORE_MULT = 10					# AI将为产生焦点资源的建筑打分更多
		AI_AMENITIES_SCORE_MULT = 20				# AI将比其他杂项资源对舒适度建筑的评分更高
		AI_HOUSING_SCORE_MULT = 15					# AI智能将比其他杂项资源对住房建筑进行更多的评分
		AI_CRIME_REDUCTION_SCORE_MULT = 10			# AI将比其他杂项资源对打击犯罪的建筑物进行更多的评分
		AI_ADMIN_CAP_SCORE_MULT = 13				# AI将比其他杂项资源对增加行政管理上限建筑的评分更高
		AI_POPS_SCORE_MULT = 3						# AI将给人口增长和装配建筑打分更多（在代码中权重已经相当高了）
		AI_MIN_CURRENCY_INCOME_TO_BUILD_STARBASE_MODULES = -150 	# 如果能量收入低于此阈值，AI将不会构建星基模块

		AI_UPPER_AMENITIES_LIMIT = 10000						# 如果星球舒适度高于这个数字，人工智能将试图通过降低舒适度岗位的优先级来平衡星球上的舒适度。
		AI_UPGRADE_SCORE_MULT = 0.2								# AI将获得更多的建筑升级（因为它们不占用新的建筑位置）

		AI_TECHNOLOGY_RARE_WEIGHT_MULT = 1.5					# AI将以这一价值使稀有技术的AI权重成倍增加
		AI_TECHNOLOGY_INFINITELY_REPEATABLE_WEIGHT_MULT = 0.4	# AI将用这个值乘以循环科技的AI权重

		TERRAFORM_SAVE_CREDITS = 100				# AI希望在开始星球改造后至少拥有这么多能量币

		STARBASE_COLONY_SCORE = 45
		STARBASE_HABITABLE_PLANET_SCORE = 70

		WAR_OCCUPIED_BORDER_PRIO = 10				# 战争时优先定位与我们占领星系接壤的星系
		WAR_OWN_BORDER_PRIO	= 5						# 战争时优先定位与我们接壤的星系
		WAR_ALLY_BORDER_PRIO = 2					# 战争时优先瞄准与盟友接壤的星系
		WAR_NO_BORDER_PRIO = 0.01					# 战争时优先瞄准处于敌对星系中央的星系
		WAR_DEFENSE_OWN_PRIO = 0.4					# 战争时优先保卫自己的边界
		WAR_DEFENSE_CONTROLLED_PRIO = 0.4			# 战争时优先保卫被征服的星系
		WAR_DEFENSE_ALLY_PRIO = 0.3					# 战争时优先保卫盟友
		WAR_NEUTRAL_SPACE_PRIO = 0.1				# 战争时优先瞄准中立空间中的敌人
		WAR_ATTACK_CLAIM_PRIO = 16.5				# 战争时优先瞄准我们宣称的敌方星系
		WAR_DEFENSE_CLAIM_PRIO = 2					# 战争时优先捍卫我们已经征服的宣称星系
		WAR_DEFENSE_OWN_PLANET_PRIO = 0.5			# 战争时优先在受控星系中保卫自己的行星
		WAR_DEFENSE_OWN_PLANET_ENEMY_CONTROL_PRIO = 50 # 战争时在敌人控制的星系中优先保卫自己的星球

		STARBASE_BYPASS_SCORE = 4

		WAR_ATTACK_PLANET_PRIO = 5.0				# 战争时优先使用行星瞄准敌方星系
		WAR_ATTACK_PLANET_CONTROLLED_SYSTEM_PRIO = 0.05			# 战争时在受控星系中优先瞄准敌方行星
		WAR_ATTACK_STARBASE_PRIO = 10				# 战争时优先瞄准具有升级星基的敌方星系
		WAR_DEFEND_STARBASE_PRIO = 0.9				# 战争时优先防御具有升级星基的星系
		WAR_ATTACK_MILITARY_FLEET_PRIO = 15.0		# 战争时优先瞄准敌方军事舰队
		WAR_ATTACK_JUMP_DRIVE_FLEET_PRIO = 5.0		# 战争时优先针对处于冷却状态的易受攻击的可跃迁舰队

		FLEET_GROUP_ABORT_MISSION_MULT = 1.2 # 所需的舰队力量至少需要增加这么多，以便AI在承诺后重新考虑任务

		FLEET_COMBAT_INTERVENTION_MULT = 0.6 # 人工智能不会试图干预舰队战斗，除非这种干预使我们处于敌方舰队的这个百分比（即，如果敌人人数超过我们2个或更多，我们不会干预）

		CAPITAL_TARGET_SCORE = 25 # 保卫/入侵首都的额外分数
		HOSTILE_FLEETS_TARGET_SCORE = 50 # 与敌方舰队交战的额外分数
		CHOKEPOINT_TARGET_MULT = 1.2 # 用于阻塞点防守得分的额外乘数

		AI_FOLLOW_FLEET_DESIRE = 0.01
		AI_FOLLOW_WAR_LEADER_DESIRE = 10

		MIN_FLEET_FOR_OPERATIONS = 500
		MIN_FLEET_THREAT_TO_CRISIS = 50000

		HOSTILE_FLEETS_TARGET_SCORE = 50 # 与敌方舰队交战的额外分数

		AVERAGE_FLEET_SIZE_FACTOR = 0.4
		FLEET_MAX_DISTANCE_LOOKUP	= 8				# 队列AI在分配任务时应考虑的最大超空间跳数间隔。
		# 如果未找到目标，备份AI会将其发送到最近的可用目标，或返回基地。
		FLEET_MAX_DISTANCE_LOOKUP_LARGE	= 15		# 在大型地图（800个星系或更多）上分配任务时，队列AI应考虑的最大超空间跳数。
		FLEET_MAX_DISTANCE_LOOKUP_HUGE	= 30		# 在大型地图（1000个星系或更多）上分配任务时，队列AI应考虑的最大超空间跳数。

		OWN_FLEET_POWER_FACTOR = 1.0				# AI在评估部队时计算多少自己的舰队力量
		ALLY_FLEET_POWER_FACTOR = 0.7				# AI在评估部队时计算多少盟友舰队力量
		ENEMY_FLEET_POWER_FACTOR = 1.25
		FLEET_SUPERIORITY_FACTOR = 2.5

		OFFENSE_VS_DEFENSE_STRATEGY_ALLOTMENT = 1.2 # 一个具有1.0侵略性的国家应该尝试投入多少舰队力量来执行进攻性任务

		FLEET_DAMAGED_THRESHOLD_WAR = 0.45			# 舰队将被视为损坏并应返回维修并避免某些行为的阈值
		FLEET_ARMOR_DAMAGED_THRESHOLD_WAR = 0.3		# 与上述相同，但用于装甲

		OFFER_TRADE_ACCEPTANCE_ATTITUDE_FACTOR = -0.9 # 如果没有适合交易的态度，贸易意愿就会降低这么多

		TRADE_MAX_RESOURCE_PERCENT = 0.3
		TRADE_MIN_RESOURCE_DELTA = 10
		TRADE_MIN_RESOURCE_STOCKPILE = 1300

		TRADE_RESOURCE_STOCKPILE_UNDER = 0.10		# 如果库存超过此数量（基数为最大存储的数量），AI将希望将另一种资源换成这一种资源
		TRADE_RESOURCE_STOCKPILE_OVER = 0.75		# 如果库存超过此数量（基数为最大存储的数量），AI将希望将这一种资源换成另一种资源
		TRADE_RESOURCE_FRACTION_MIN = 0.05			# AI应该提供多少库存进行交易（最小）
		TRADE_RESOURCE_FRACTION_MAX = 0.2			# AI应该提供多少库存进行交易（最大）

		MIN_WILLINGNESS_TO_OFFER_TRADE = 0.75 # 具有交易意愿低于此水平的个性的AI将不会提供交易


		AI_BUDGETING_START_YEARS = 10					# 这些变量用于人工智能的一些预算，以确保它尽早优先考虑正确的事情。
		AI_BUDGETING_MID_YEARS = 20
		AI_BUDGETING_LATE_YEARS = 40

		BUILDING_BUILD_THRESHOLD = 1		# 如果AI的权重大于或等于这个，人工智能会考虑构建它。

		MIN_ASSAULT_ARMIES = 10
		MAX_ASSAULT_ARMIES = 200

		BUILDING_EXISTS_DIV_SCORE = 0			# 这个数字越高，AI就越能避免在行星上建造同一栋建筑

		NUM_TRADITIONS_FOR_EDICTS = 21			# 在将凝聚力花费在法令上之前，AI想要多少传统（在计算采用和完成效果的基础游戏中总共有49个）

		MAX_PLANETS_FOR_BUDGET_FACTOR = 7		# 在这个行星数量下，预算正常化
		MAX_SYSTEMS_FOR_BUDGET_FACTOR = 5 # 在这个数量的预算下，优先权转移到殖民地

		MIN_NAVY_SIZE_FOR_ADMIRAL = 19		# AI在招募海军上将之前，想要一支至少如此规模的舰队

		LEADER_FRACTION_SCIENTIST = 0.6 	# 应该是科学家的AI领袖比例
		LEADER_FRACTION_ADMIRAL = 0.35			# 海军上将的比例
		LEADER_FRACTION_GENERAL = 0.005			# 陆军元帅的比例
		LEADER_FRACTION_GOVERNOR = 0.1			# 总督的比例
		LEADER_FRACTION_CHANGE_CAP = 11			# 领导者上限大于这个数时，将减少科学家分数并增加其他

		ABORT_MISSION_LIMIT = 0.30				# 低于此水平的军事力量分数将导致AI逃脱战斗

		WAR_EXHAUSTION_TO_INTERVENE = 0.2		# AI可能想要干预，以帮助帝国应对这种战争疲惫或更高的战争

		PEACE_WAR_EXHAUSTION_FACTOR = 200
		PEACE_OCCUPATION_FACTOR = 700
		PEACE_STATUS_QUO_FACTOR = -300
		PEACE_HIGH_WE_STATUS_QUO_FACTOR = 550
		PEACE_DEMAND_SURRENDER_FACTOR = -600
		PEACE_DEFENDING_CLAIM_SYSTEM_FACTOR = -10	# For every system
		PEACE_DEFENDING_CLAIM_STARBASE_FACTOR = -40	# For systems with upgraded starbases
		PEACE_DEFENDING_CLAIM_PLANET_FACTOR = -100	# For systems with colonies
		PEACE_RELATIVE_NAVY_STRENGTH_FACTOR = 450

		INFLUENCE_FRACTION_EDICTS = 0.90		# Fraction of AI Influence that goes to edicts
		INFLUENCE_FRACTION_STARBASES = 0.60		# Fraction of AI influence that is used for starbases
		INFLUENCE_FRACTION_CLAIMS = 0.40		# Fraction of AI influence that is used for claims
		INFLUENCE_FRACTION_RESETTLEMENT = 0.00	# Fraction of AI influence that is used for resettlement

		INFLUENCE_MAX_EDICTS = 300		# Max influence stored for edicts
		INFLUENCE_MAX_STARBASES = 100	# Max influence stored for starbases
		INFLUENCE_MAX_CLAIMS = 400		# Max influence stored for claims
		INFLUENCE_MAX_RESETTLEMENT = 0	# Max influence stored for resettlement

		ENEMY_FLEET_POWER_MULT = 0.99			# AI will need the fleet power of the enemy multiplied by this value to become offensive in an offensive war
		ENEMY_ARMY_POWER_MULT = 1.05				# AI will need the military power of the enemy multiplied by this value to land armies on planet
		ENEMY_FLEET_POWER_HOME_SYSTEM_MULT = 0.9 # AI will need the fleet power of the enemy multiplied by this value to attack hostiles in own systems
		ENEMY_NEUTRALS_FLEET_POWER_MULT = 2	# AI will need the fleet power of the enemy multiplied by this value to attack neutrals and space hostiles

		MAX_EXPANSION_DISTANCE = 2				# Max number of jumps away AI will build starbases
		MAX_EXPANSION_DISTANCE_SUBJECT = 1		# Max number of jumps away AI subjects will build starbases
		EXPANSION_OWN_PRIORITY = 1000			# Priority on rebuilding destroyed starbases in colonized systems
		EXPANSION_CUT_OFF_SYSTEM_PRIORITY = 2	# Priority on systems cut-off inside own territory
		EXPANSION_BORDERING_PRIORITY = 300		# How much will AI prioritize bordering systems when building starbases
		EXPANSION_RESOURCE_PRIORITY = 50		# How much will AI prioritize resource-rich systems when building starbases
		EXPANSION_COLONY_PRIORITY = 900			# How much will AI prioritize systems with colonizeable worlds when building starbases
		EXPANSION_BYPASS_PRIORITY = 1			# How much will AI prioritize systems with bypasses when building starbases
		EXPANSION_MIN_VALUE_FOR_HIGH_PRIO = 50	# How much value does a system need to be considered priority over building up existing systems in borders
		EXPANSION_RANDOM_AMOUNT	= 50			# A random roll of this amount is added to each system's score when deciding where to expand next
		EXPANSION_RESOURCE_GAIN_UPKEEP	= 0.5	# When checking candidate systems for outposts, the AI looks at the resources in the system and counts this fraction towards upkeep gain

		MAX_CLAIM_DISTANCE = 6					# Max number of jumps away AI will make claims on
		MAX_CLAIM_DISTANCE_SUBJECT = 3			# Max number of jumps away AI subjects will make claims on
		CLAIM_BASE_VALUE = 100
		CLAIM_RESOURCE_FACTOR = 5				# How much will AI prioritize resource-rich systems when making claims
		CLAIM_BYPASS_FACTOR = 2					# How much will AI prioritize systems with bypasses when making claims
		CLAIM_RELATIONS_FACTOR = -2.5			# How much will AI factor in opinion when making claims
		CLAIM_COST_FACTOR = -0.2				# How much will AI prioritize resource-rich systems when making claims
		CLAIM_COLONY_FACTOR = 500				# How much will AI prioritize colonies when making claims
		CLAIM_BORDERING_FACTOR = 10				# How much will AI prioritize bordering systems when making claims

		AI_ALLOWED_TO_BUY = { "minerals" "food" "alloys" "consumer_goods" "exotic_gases" "rare_crystals" "volatile_motes" "sr_living_metal" "sr_dark_matter" "sr_zro"}
		AI_ALLOWED_TO_SELL = { "minerals" "food" "alloys" "consumer_goods" "exotic_gases" "rare_crystals" "volatile_motes" "sr_living_metal" "sr_dark_matter" "sr_zro"}
		AI_MIN_CURRENCY_TO_SELL = 1300.0			# If the AI has less currency (energy) than this it will consider selling resources
		AI_MIN_CURRENCY_INCOME_TO_SELL = 5.0	# If the AI has less currency (energy) gain last month than this it will consider selling resources

		AI_MIN_HABITABILITY_TO_COLONIZE = 0	# AI will avoid colonizing planets with habitability lower than this.
		AI_MIN_BRANCH_OFFICE_WORTH_TO_ESTABLISH = 2.0	# AI megacorporations will not establish branch offices unless value is above this

		SLAVE_BUY_EC_THRESHOLD = 1000 # if we have less ec than this, dont buy slaves
		SLAVE_BUY_UNEMPLOYMENT_THRESHOLD = 1 # if we have this many unemployed pops, dont buy slaves
		SLAVE_BUY_HABITABILITY_THRESHOLD = 0.7 # if we cant find a planet with at least this much habitability for a prospective slave, dont buy it

		SLAVE_SELL_EC_THRESHOLD = 0 # if we have more ec than this then don't sell any slaves
		SLAVE_SELL_TOTAL_UNEMPLOYMENT_THRESHOLD = 20 # if we have at least this many unemployed pops across all planets, sell one of them
		SLAVE_SELL_PLANET_UNEMPLOYMENT_THRESHOLD = 9 # if any one planet has at least this many unemployed pops, sell a slave

		SCIENTIST_HIRING_REPLACEMENT_THRESHOLD = 1.25	# When hiring for a job category, how much the score has to be higher than the previous tenants's score to replace him
		SCIENTIST_HIRING_PREV_JOB_THRESHOLD = 1.1		# When hiring a scientist, how much the better score for the new category has to be compared to your current employment score
		SCIENTIST_HIRING_UNEMPLOYMENT_MULT = 1.1		# how much of a bonus unemployed scientist get to their job score
		SCIENTIST_HIRING_SURVEY_MULTIPLIER = 0.5		# when hiring for research, the multiplier applied to a scientist who's on a science ship, to ensure surveying has priority over research

		WAR_DECLARATION_MALUS_DISTANCE = 10				# Distance between empires (in jumps) at which the AI will be less likely to declare war
		WAR_DECLARATION_MALUS = 0.1
	}
